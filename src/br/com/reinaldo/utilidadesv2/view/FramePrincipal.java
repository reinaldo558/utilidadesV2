/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.reinaldo.utilidadesv2.view;

import br.com.reinaldo.utilidadesv2.constantes.Constantes;
import br.com.reinaldo.utilidadesv2.constantes.VariaveisComuns;
import br.com.reinaldo.utilidadesv2.entidades.CopiarEntity;
import br.com.reinaldo.utilidadesv2.entidades.MaquinaEntity;
import br.com.reinaldo.utilidadesv2.regras.ConversorStrRplc;
import br.com.reinaldo.utilidadesv2.regras.Copiar;
import br.com.reinaldo.utilidadesv2.regras.CryptoPass;
import br.com.reinaldo.utilidadesv2.regras.GeradorCpfCnpj;
import br.com.reinaldo.utilidadesv2.regras.HSM;
import br.com.reinaldo.utilidadesv2.utils.AcoesComuns;
import br.com.reinaldo.utilidadesv2.utils.ConversorHsm;
import br.com.reinaldo.utilidadesv2.utils.ParseDE55;
import br.com.reinaldo.utilidadesv2.utils.TerminalUtil;
import java.awt.Color;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author desenv
 */
public class FramePrincipal extends javax.swing.JFrame {

    private final AdicionarEditarCrypto janelaAddEdit = new AdicionarEditarCrypto();
    boolean mostrandoSenhaAberta = false;
    
    public static final TimeZone TIMEZONE_GMT3 = TimeZone.getTimeZone("GMT-3:00");
    public static final Locale LOCALE_PtBR = new Locale("pt", "BR");

    private Calendar calTmp = Calendar.getInstance(TIMEZONE_GMT3, LOCALE_PtBR);

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
        setVisible(false);
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        
        initCpfComponents();
        recarregarArvore();
        mudarCalendarioHoje();
        
        setLocationRelativeTo(null);
        janelaAddEdit.setLocationRelativeTo(getContentPane());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cvcRadioGroupBandeira = new javax.swing.ButtonGroup();
        cpfRadioGroupPrefixo = new javax.swing.ButtonGroup();
        cpfRadioGroupQuantidade = new javax.swing.ButtonGroup();
        tabCalendario = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cryptoScrollMaquinas = new javax.swing.JScrollPane();
        cryptoArvoreMaquinas = new javax.swing.JTree();
        jLabel20 = new javax.swing.JLabel();
        cryptoLblUsuario = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cryptoLblSenha = new javax.swing.JLabel();
        cryptoBtnMostrarOcultar = new javax.swing.JButton();
        cryptoBtnCopiar = new javax.swing.JButton();
        cryptoBtnDetalhes = new javax.swing.JButton();
        cryptoBtnAlterarSenha = new javax.swing.JButton();
        cryptoBtnEdicaoAvancada = new javax.swing.JButton();
        cryptoBtnAbrirTerminal = new javax.swing.JButton();
        cryptoBtnNovaMaquina = new javax.swing.JButton();
        cryptoBtnBloquearTela = new javax.swing.JButton();
        cryptoBtnAbrirMuitos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cpfRadioPrefixoAleatorio = new javax.swing.JRadioButton();
        cpfRadioPrefixoInformado = new javax.swing.JRadioButton();
        cpfTxtPrefixo = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cpfRadioQuantidadeUm = new javax.swing.JRadioButton();
        cpfRadioQuantidadeMuitos = new javax.swing.JRadioButton();
        cpfSliderMuitos = new javax.swing.JSlider();
        cpfBtnCriar = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        cpfScrollResultado = new javax.swing.JScrollPane();
        cpfTxtAreaResultado = new javax.swing.JTextArea();
        cpfLblQuantidade = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        directTxtHost = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        directTxtPorta = new javax.swing.JTextField();
        directCheckDevice = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        directComboExemplos = new javax.swing.JComboBox();
        directComboHistorico = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        directScrollRequest = new javax.swing.JScrollPane();
        directTxtAreaRequest = new javax.swing.JTextArea();
        directBtnRequestToBin = new javax.swing.JButton();
        directBtnRequestToStr = new javax.swing.JButton();
        directBtnRequestLimpar = new javax.swing.JButton();
        directBtnRequestSalvar = new javax.swing.JButton();
        directBtnRequestDe55 = new javax.swing.JButton();
        directBtnRequestEnviar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        directScrollResponse = new javax.swing.JScrollPane();
        directTxtAreaResponse = new javax.swing.JTextArea();
        directBtnResponseToBin = new javax.swing.JButton();
        directBtnResponseToStr = new javax.swing.JButton();
        directBtnResponseLimpar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cvcTxtDataValidade = new javax.swing.JTextField();
        cvcTxtNumeroCartao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cvcBandeiraMC = new javax.swing.JRadioButton();
        cvcBandeiraVS = new javax.swing.JRadioButton();
        cvcBandeiraTB = new javax.swing.JRadioButton();
        cvcBandeiraAU = new javax.swing.JRadioButton();
        cvcBtnGerar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cvcLblResult601 = new javax.swing.JLabel();
        cvcLblResult501 = new javax.swing.JLabel();
        cvcLblResult000 = new javax.swing.JLabel();
        cvcLblResult999 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        strRplcOrigemTxtArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        strRplcOrigem = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        strRplcOrigemDestino = new javax.swing.JComboBox();
        strRplcOrigemBtnConverter = new javax.swing.JButton();
        panelCalendario = new javax.swing.JPanel();
        lblAno = new javax.swing.JLabel();
        btnAnoAnterior = new javax.swing.JButton();
        txtAno = new javax.swing.JTextField();
        btnMesAnterior = new javax.swing.JButton();
        lblData = new javax.swing.JLabel();
        btnHoje = new javax.swing.JButton();
        lblMes = new javax.swing.JLabel();
        txtMes = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        btnAnoProximo = new javax.swing.JButton();
        btnMesProximo = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        lblSab = new javax.swing.JLabel();
        lblDom = new javax.swing.JLabel();
        lblSeg = new javax.swing.JLabel();
        lblTer = new javax.swing.JLabel();
        lblQua = new javax.swing.JLabel();
        lblQui = new javax.swing.JLabel();
        lblSex = new javax.swing.JLabel();
        _d1 = new javax.swing.JLabel();
        _j1 = new javax.swing.JLabel();
        _d2 = new javax.swing.JLabel();
        _j2 = new javax.swing.JLabel();
        _j3 = new javax.swing.JLabel();
        _d3 = new javax.swing.JLabel();
        _j4 = new javax.swing.JLabel();
        _d4 = new javax.swing.JLabel();
        _j5 = new javax.swing.JLabel();
        _d5 = new javax.swing.JLabel();
        _j6 = new javax.swing.JLabel();
        _d6 = new javax.swing.JLabel();
        _d7 = new javax.swing.JLabel();
        _j7 = new javax.swing.JLabel();
        _d14 = new javax.swing.JLabel();
        _j14 = new javax.swing.JLabel();
        _j13 = new javax.swing.JLabel();
        _d13 = new javax.swing.JLabel();
        _j12 = new javax.swing.JLabel();
        _d12 = new javax.swing.JLabel();
        _j11 = new javax.swing.JLabel();
        _d11 = new javax.swing.JLabel();
        _j10 = new javax.swing.JLabel();
        _d10 = new javax.swing.JLabel();
        _j9 = new javax.swing.JLabel();
        _d9 = new javax.swing.JLabel();
        _d21 = new javax.swing.JLabel();
        _j20 = new javax.swing.JLabel();
        _d16 = new javax.swing.JLabel();
        _d18 = new javax.swing.JLabel();
        _j18 = new javax.swing.JLabel();
        _d17 = new javax.swing.JLabel();
        _j17 = new javax.swing.JLabel();
        _d19 = new javax.swing.JLabel();
        _j16 = new javax.swing.JLabel();
        _j19 = new javax.swing.JLabel();
        _d20 = new javax.swing.JLabel();
        _j21 = new javax.swing.JLabel();
        _d26 = new javax.swing.JLabel();
        _j24 = new javax.swing.JLabel();
        _d25 = new javax.swing.JLabel();
        _j26 = new javax.swing.JLabel();
        _d23 = new javax.swing.JLabel();
        _d24 = new javax.swing.JLabel();
        _j27 = new javax.swing.JLabel();
        _d28 = new javax.swing.JLabel();
        _j23 = new javax.swing.JLabel();
        _j28 = new javax.swing.JLabel();
        _d27 = new javax.swing.JLabel();
        _j25 = new javax.swing.JLabel();
        _d30 = new javax.swing.JLabel();
        _j30 = new javax.swing.JLabel();
        _j31 = new javax.swing.JLabel();
        _d31 = new javax.swing.JLabel();
        _d32 = new javax.swing.JLabel();
        _j32 = new javax.swing.JLabel();
        _d33 = new javax.swing.JLabel();
        _j33 = new javax.swing.JLabel();
        _j34 = new javax.swing.JLabel();
        _d35 = new javax.swing.JLabel();
        _j35 = new javax.swing.JLabel();
        _d34 = new javax.swing.JLabel();
        _j41 = new javax.swing.JLabel();
        _d40 = new javax.swing.JLabel();
        _j42 = new javax.swing.JLabel();
        _d39 = new javax.swing.JLabel();
        _d38 = new javax.swing.JLabel();
        _d41 = new javax.swing.JLabel();
        _j39 = new javax.swing.JLabel();
        _d42 = new javax.swing.JLabel();
        _j40 = new javax.swing.JLabel();
        _j38 = new javax.swing.JLabel();
        _j37 = new javax.swing.JLabel();
        _d37 = new javax.swing.JLabel();
        _d8 = new javax.swing.JLabel();
        _j8 = new javax.swing.JLabel();
        _j22 = new javax.swing.JLabel();
        _d22 = new javax.swing.JLabel();
        _j15 = new javax.swing.JLabel();
        _d15 = new javax.swing.JLabel();
        _d29 = new javax.swing.JLabel();
        _j29 = new javax.swing.JLabel();
        _d36 = new javax.swing.JLabel();
        _j36 = new javax.swing.JLabel();
        panelCopiar = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        copiarCkWebCatalina = new javax.swing.JCheckBox();
        copiarCkWebLocalhost = new javax.swing.JCheckBox();
        copiarCkWebLocalhostAccess = new javax.swing.JCheckBox();
        copiarCkWebDoitClient = new javax.swing.JCheckBox();
        copiarCkWebAbertura = new javax.swing.JCheckBox();
        copiarCkWebTelematica = new javax.swing.JCheckBox();
        copiarCkWebWscetelem = new javax.swing.JCheckBox();
        copiarCkWebWstelem = new javax.swing.JCheckBox();
        copiarCkWebSmsCyber = new javax.swing.JCheckBox();
        copiarCkAutMaster1 = new javax.swing.JCheckBox();
        copiarCkAutMaster2 = new javax.swing.JCheckBox();
        copiarCkAutMaster3 = new javax.swing.JCheckBox();
        copiarCkAutMaster4 = new javax.swing.JCheckBox();
        copiarCkAutAura = new javax.swing.JCheckBox();
        copiarCkAutTecban = new javax.swing.JCheckBox();
        copiarCkAutItautec = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        copiarTxtQtDias = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        copiarLblDestino = new javax.swing.JLabel();
        copiarBtnProcurar = new javax.swing.JButton();
        copiarBtnIniciarCopia = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        copiarScrollLog = new javax.swing.JScrollPane();
        copiarTxtAreaLog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Utilidades V2");
        setMinimumSize(new java.awt.Dimension(605, 460));

        tabCalendario.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabCalendarioStateChanged(evt);
            }
        });

        cryptoArvoreMaquinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cryptoArvoreMaquinasMousePressed(evt);
            }
        });
        cryptoArvoreMaquinas.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                cryptoArvoreMaquinasValueChanged(evt);
            }
        });
        cryptoScrollMaquinas.setViewportView(cryptoArvoreMaquinas);

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel20.setText("Usuário:");

        cryptoLblUsuario.setText("...");

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel22.setText("Senha:");

        cryptoLblSenha.setText("...");

        cryptoBtnMostrarOcultar.setText("mostrar / ocultar");
        cryptoBtnMostrarOcultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnMostrarOcultarActionPerformed(evt);
            }
        });

        cryptoBtnCopiar.setText("copiar senha");
        cryptoBtnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnCopiarActionPerformed(evt);
            }
        });

        cryptoBtnDetalhes.setText("detalhes / descrição");
        cryptoBtnDetalhes.setMaximumSize(new java.awt.Dimension(126, 25));
        cryptoBtnDetalhes.setMinimumSize(new java.awt.Dimension(126, 25));
        cryptoBtnDetalhes.setPreferredSize(new java.awt.Dimension(126, 25));
        cryptoBtnDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnDetalhesActionPerformed(evt);
            }
        });

        cryptoBtnAlterarSenha.setText("alterar senha");
        cryptoBtnAlterarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnAlterarSenhaActionPerformed(evt);
            }
        });

        cryptoBtnEdicaoAvancada.setText("edição avançada");
        cryptoBtnEdicaoAvancada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnEdicaoAvancadaActionPerformed(evt);
            }
        });

        cryptoBtnAbrirTerminal.setText("abrir terminal");
        cryptoBtnAbrirTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnAbrirTerminalActionPerformed(evt);
            }
        });

        cryptoBtnNovaMaquina.setText("nova máquina");
        cryptoBtnNovaMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnNovaMaquinaActionPerformed(evt);
            }
        });

        cryptoBtnBloquearTela.setText("desbloquear tela");
        cryptoBtnBloquearTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnBloquearTelaActionPerformed(evt);
            }
        });

        cryptoBtnAbrirMuitos.setText("abrir muitos");
        cryptoBtnAbrirMuitos.setToolTipText("Selecione varias maquinas para abrir todas de uma vez");
        cryptoBtnAbrirMuitos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cryptoBtnAbrirMuitosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cryptoScrollMaquinas, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cryptoLblUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoLblSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnMostrarOcultar, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnCopiar, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnAlterarSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnEdicaoAvancada, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnAbrirTerminal, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnNovaMaquina, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnBloquearTela, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(cryptoBtnDetalhes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cryptoBtnAbrirMuitos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cryptoLblUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cryptoLblSenha)
                        .addGap(18, 18, 18)
                        .addComponent(cryptoBtnMostrarOcultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cryptoBtnCopiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cryptoBtnDetalhes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(cryptoBtnAlterarSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cryptoBtnEdicaoAvancada)
                        .addGap(37, 37, 37)
                        .addComponent(cryptoBtnAbrirTerminal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cryptoBtnAbrirMuitos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(cryptoBtnNovaMaquina)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cryptoBtnBloquearTela))
                    .addComponent(cryptoScrollMaquinas))
                .addContainerGap())
        );

        tabCalendario.addTab("Crypto", jPanel1);

        jLabel17.setText("Prefixo:");

        cpfRadioGroupPrefixo.add(cpfRadioPrefixoAleatorio);
        cpfRadioPrefixoAleatorio.setText("Aleatório");
        cpfRadioPrefixoAleatorio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cpfRadioPrefixoAleatorioStateChanged(evt);
            }
        });

        cpfRadioGroupPrefixo.add(cpfRadioPrefixoInformado);
        cpfRadioPrefixoInformado.setText("Prefixo");
        cpfRadioPrefixoInformado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cpfRadioPrefixoInformadoStateChanged(evt);
            }
        });

        cpfTxtPrefixo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cpfTxtPrefixoKeyTyped(evt);
            }
        });

        jLabel18.setText("Quantidade:");

        cpfRadioGroupQuantidade.add(cpfRadioQuantidadeUm);
        cpfRadioQuantidadeUm.setText("UM (e copiar)");
        cpfRadioQuantidadeUm.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cpfRadioQuantidadeUmStateChanged(evt);
            }
        });

        cpfRadioGroupQuantidade.add(cpfRadioQuantidadeMuitos);
        cpfRadioQuantidadeMuitos.setText("Muitos");
        cpfRadioQuantidadeMuitos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cpfRadioQuantidadeMuitosStateChanged(evt);
            }
        });

        cpfSliderMuitos.setMajorTickSpacing(10);
        cpfSliderMuitos.setMaximum(500);
        cpfSliderMuitos.setMinimum(10);
        cpfSliderMuitos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cpfSliderMuitosStateChanged(evt);
            }
        });

        cpfBtnCriar.setText("Criar CPFs");
        cpfBtnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfBtnCriarActionPerformed(evt);
            }
        });

        jLabel19.setText("Resultado:");

        cpfTxtAreaResultado.setColumns(20);
        cpfTxtAreaResultado.setRows(5);
        cpfScrollResultado.setViewportView(cpfTxtAreaResultado);

        cpfLblQuantidade.setForeground(new java.awt.Color(255, 0, 0));
        cpfLblQuantidade.setText("50");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cpfBtnCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(cpfRadioPrefixoAleatorio)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cpfRadioPrefixoInformado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpfTxtPrefixo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(93, 93, 93)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfRadioQuantidadeUm)
                            .addComponent(jLabel18)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cpfRadioQuantidadeMuitos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpfSliderMuitos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpfLblQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))))
                    .addComponent(jLabel19)
                    .addComponent(cpfScrollResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cpfRadioQuantidadeUm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cpfRadioQuantidadeMuitos)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cpfLblQuantidade)
                                .addComponent(cpfSliderMuitos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cpfRadioPrefixoAleatorio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cpfTxtPrefixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cpfRadioPrefixoInformado))))
                .addGap(18, 18, 18)
                .addComponent(cpfBtnCriar)
                .addGap(33, 33, 33)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpfScrollResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabCalendario.addTab("CPF", jPanel2);

        jLabel11.setText("IP / HOST: ");

        directTxtHost.setText("spos7032.teste.cetelem.com.br");

        jLabel12.setText("Porta:");

        directTxtPorta.setText("1515");

        directCheckDevice.setText("Marque para HSM Device / Desmarque para CTLM-HSM-SERVER");
        directCheckDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directCheckDeviceActionPerformed(evt);
            }
        });

        jLabel13.setText("Exemplos:");

        directComboExemplos.setModel(getModelExemplos());
        directComboExemplos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directComboExemplosActionPerformed(evt);
            }
        });

        directComboHistorico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        directComboHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directComboHistoricoActionPerformed(evt);
            }
        });

        jLabel14.setText("Histórico:");

        jLabel15.setText("Request:");

        directTxtAreaRequest.setColumns(20);
        directTxtAreaRequest.setRows(5);
        directScrollRequest.setViewportView(directTxtAreaRequest);

        directBtnRequestToBin.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnRequestToBin.setText("toBin");
        directBtnRequestToBin.setMargin(new java.awt.Insets(0, 0, 0, 0));
        directBtnRequestToBin.setMaximumSize(new java.awt.Dimension(50, 20));
        directBtnRequestToBin.setMinimumSize(new java.awt.Dimension(50, 20));
        directBtnRequestToBin.setPreferredSize(new java.awt.Dimension(50, 20));
        directBtnRequestToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnRequestToBinActionPerformed(evt);
            }
        });

        directBtnRequestToStr.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnRequestToStr.setText("toStr");
        directBtnRequestToStr.setMargin(new java.awt.Insets(0, 0, 0, 0));
        directBtnRequestToStr.setMaximumSize(new java.awt.Dimension(50, 20));
        directBtnRequestToStr.setMinimumSize(new java.awt.Dimension(50, 20));
        directBtnRequestToStr.setPreferredSize(new java.awt.Dimension(50, 20));
        directBtnRequestToStr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnRequestToStrActionPerformed(evt);
            }
        });

        directBtnRequestLimpar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnRequestLimpar.setText("limpar");
        directBtnRequestLimpar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        directBtnRequestLimpar.setMaximumSize(new java.awt.Dimension(50, 20));
        directBtnRequestLimpar.setMinimumSize(new java.awt.Dimension(50, 20));
        directBtnRequestLimpar.setPreferredSize(new java.awt.Dimension(50, 20));
        directBtnRequestLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnRequestLimparActionPerformed(evt);
            }
        });

        directBtnRequestSalvar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnRequestSalvar.setText("<- salvar");
        directBtnRequestSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnRequestSalvarActionPerformed(evt);
            }
        });

        directBtnRequestDe55.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnRequestDe55.setText("de55");
        directBtnRequestDe55.setMargin(new java.awt.Insets(0, 0, 0, 0));
        directBtnRequestDe55.setMaximumSize(new java.awt.Dimension(50, 20));
        directBtnRequestDe55.setMinimumSize(new java.awt.Dimension(50, 20));
        directBtnRequestDe55.setPreferredSize(new java.awt.Dimension(50, 20));
        directBtnRequestDe55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnRequestDe55ActionPerformed(evt);
            }
        });

        directBtnRequestEnviar.setText("ENVIAR");
        directBtnRequestEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnRequestEnviarActionPerformed(evt);
            }
        });

        jLabel16.setText("Response:");

        directTxtAreaResponse.setColumns(20);
        directTxtAreaResponse.setRows(5);
        directScrollResponse.setViewportView(directTxtAreaResponse);

        directBtnResponseToBin.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnResponseToBin.setText("toBin");
        directBtnResponseToBin.setMargin(new java.awt.Insets(0, 0, 0, 0));
        directBtnResponseToBin.setMinimumSize(new java.awt.Dimension(50, 20));
        directBtnResponseToBin.setPreferredSize(new java.awt.Dimension(50, 20));
        directBtnResponseToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnResponseToBinActionPerformed(evt);
            }
        });

        directBtnResponseToStr.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnResponseToStr.setText("toStr");
        directBtnResponseToStr.setMargin(new java.awt.Insets(0, 0, 0, 0));
        directBtnResponseToStr.setMinimumSize(new java.awt.Dimension(50, 20));
        directBtnResponseToStr.setPreferredSize(new java.awt.Dimension(50, 20));
        directBtnResponseToStr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnResponseToStrActionPerformed(evt);
            }
        });

        directBtnResponseLimpar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        directBtnResponseLimpar.setText("limpar");
        directBtnResponseLimpar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        directBtnResponseLimpar.setMinimumSize(new java.awt.Dimension(50, 20));
        directBtnResponseLimpar.setPreferredSize(new java.awt.Dimension(50, 20));
        directBtnResponseLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directBtnResponseLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(directTxtHost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(directTxtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directComboExemplos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(directComboHistorico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directBtnRequestSalvar))))
                    .addComponent(jSeparator1)
                    .addComponent(directScrollRequest)
                    .addComponent(directScrollResponse)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directCheckDevice)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(directBtnResponseToBin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directBtnResponseToStr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directBtnResponseLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(directBtnRequestToBin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directBtnRequestToStr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directBtnRequestLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directBtnRequestDe55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 148, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(directBtnRequestEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(directCheckDevice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(directTxtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directTxtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directComboExemplos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directComboHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(directBtnRequestSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directScrollRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(directBtnRequestEnviar)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(directBtnRequestToBin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(directBtnRequestToStr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(directBtnRequestLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(directBtnRequestDe55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directScrollResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directBtnResponseLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directBtnResponseToStr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directBtnResponseToBin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabCalendario.addTab("Direct", jPanel3);

        jLabel4.setText("Número do Cartão:");

        jLabel5.setText("Validade do Cartão (AAMM):");

        jLabel6.setText("Bandeira:");

        cvcRadioGroupBandeira.add(cvcBandeiraMC);
        cvcBandeiraMC.setText("MC");

        cvcRadioGroupBandeira.add(cvcBandeiraVS);
        cvcBandeiraVS.setText("VS");
        cvcBandeiraVS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvcBandeiraVSActionPerformed(evt);
            }
        });

        cvcRadioGroupBandeira.add(cvcBandeiraTB);
        cvcBandeiraTB.setText("TB");

        cvcRadioGroupBandeira.add(cvcBandeiraAU);
        cvcBandeiraAU.setText("AU");

        cvcBtnGerar.setText("Gerar CVCs / CVVs");
        cvcBtnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvcBtnGerarActionPerformed(evt);
            }
        });

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setText("CVC1 - Tarja (601) : ");

        jLabel8.setText("CVC1 - Chip (501): ");

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("CVC2 (000) PORTAL:");

        jLabel10.setText("CVC Chip (999):");

        cvcLblResult601.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cvcLblResult601.setForeground(new java.awt.Color(0, 0, 0));
        cvcLblResult601.setText("...");

        cvcLblResult501.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cvcLblResult501.setForeground(new java.awt.Color(0, 0, 0));
        cvcLblResult501.setText("...");

        cvcLblResult000.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cvcLblResult000.setForeground(new java.awt.Color(255, 0, 0));
        cvcLblResult000.setText("...");

        cvcLblResult999.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cvcLblResult999.setForeground(new java.awt.Color(0, 0, 0));
        cvcLblResult999.setText("...");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cvcLblResult601, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3))
                    .addComponent(cvcLblResult501, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cvcLblResult000, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cvcLblResult999, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cvcLblResult601))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cvcLblResult501))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cvcLblResult000))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cvcLblResult999))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cvcTxtNumeroCartao)
                            .addComponent(cvcTxtDataValidade)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cvcBandeiraMC)
                                .addGap(18, 18, 18)
                                .addComponent(cvcBandeiraVS)
                                .addGap(18, 18, 18)
                                .addComponent(cvcBandeiraTB)
                                .addGap(18, 18, 18)
                                .addComponent(cvcBandeiraAU))
                            .addComponent(cvcBtnGerar)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 307, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cvcTxtNumeroCartao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cvcTxtDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cvcBandeiraMC)
                    .addComponent(cvcBandeiraVS)
                    .addComponent(cvcBandeiraTB)
                    .addComponent(cvcBandeiraAU))
                .addGap(18, 18, 18)
                .addComponent(cvcBtnGerar)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        tabCalendario.addTab("CVC", jPanel4);

        jLabel1.setText("Texto:");

        strRplcOrigemTxtArea.setColumns(20);
        strRplcOrigemTxtArea.setLineWrap(true);
        strRplcOrigemTxtArea.setRows(5);
        jScrollPane1.setViewportView(strRplcOrigemTxtArea);

        jLabel2.setText("Origem:");

        strRplcOrigem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Html", "Hexa", "Unicode", "Binário", "Texto Normal" }));
        strRplcOrigem.setSelectedIndex(4);

        jLabel3.setText("Destino:");

        strRplcOrigemDestino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Html", "Hexa", "Unicode", "Binário", "Texto Normal" }));

        strRplcOrigemBtnConverter.setText("Converter");
        strRplcOrigemBtnConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strRplcOrigemBtnConverterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(strRplcOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(strRplcOrigemDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 106, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(strRplcOrigemBtnConverter)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strRplcOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strRplcOrigemDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addComponent(strRplcOrigemBtnConverter)
                .addContainerGap())
        );

        tabCalendario.addTab("StrRplc", jPanel5);

        lblAno.setText("ano:");

        btnAnoAnterior.setText("<<");
        btnAnoAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnoAnteriorActionPerformed(evt);
            }
        });

        txtAno.setToolTipText("Ano com 4 dígitos (Ex: 1999)");

        btnMesAnterior.setText("<");
        btnMesAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMesAnteriorActionPerformed(evt);
            }
        });

        lblData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblData.setText("janeiro de 2099");

        btnHoje.setText("hoje");
        btnHoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHojeActionPerformed(evt);
            }
        });

        lblMes.setText("mês:");

        txtMes.setToolTipText("Numero (Janeiro = 1, Dezembro = 12)");
        txtMes.setMaximumSize(new java.awt.Dimension(4, 19));

        btnOk.setText("ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnAnoProximo.setText(">>");
        btnAnoProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnoProximoActionPerformed(evt);
            }
        });

        btnMesProximo.setText(">");
        btnMesProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMesProximoActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(null);

        lblSab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSab.setText("SAB");
        lblSab.setMaximumSize(new java.awt.Dimension(55, 15));
        lblSab.setMinimumSize(new java.awt.Dimension(55, 15));
        lblSab.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(lblSab);
        lblSab.setBounds(370, 10, 55, 15);

        lblDom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDom.setText("DOM");
        lblDom.setMaximumSize(new java.awt.Dimension(60, 15));
        lblDom.setMinimumSize(new java.awt.Dimension(60, 15));
        lblDom.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(lblDom);
        lblDom.setBounds(10, 10, 55, 15);

        lblSeg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSeg.setText("SEG");
        lblSeg.setMaximumSize(new java.awt.Dimension(55, 15));
        lblSeg.setMinimumSize(new java.awt.Dimension(55, 15));
        lblSeg.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(lblSeg);
        lblSeg.setBounds(70, 10, 55, 15);

        lblTer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTer.setText("TER");
        lblTer.setMaximumSize(new java.awt.Dimension(55, 15));
        lblTer.setMinimumSize(new java.awt.Dimension(55, 15));
        lblTer.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(lblTer);
        lblTer.setBounds(130, 10, 55, 15);

        lblQua.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQua.setText("QUA");
        lblQua.setMaximumSize(new java.awt.Dimension(55, 15));
        lblQua.setMinimumSize(new java.awt.Dimension(55, 15));
        lblQua.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(lblQua);
        lblQua.setBounds(190, 10, 55, 15);

        lblQui.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQui.setText("QUI");
        lblQui.setMaximumSize(new java.awt.Dimension(55, 15));
        lblQui.setMinimumSize(new java.awt.Dimension(55, 15));
        lblQui.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(lblQui);
        lblQui.setBounds(250, 10, 55, 15);

        lblSex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSex.setText("SEX");
        lblSex.setMaximumSize(new java.awt.Dimension(55, 15));
        lblSex.setMinimumSize(new java.awt.Dimension(55, 15));
        lblSex.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(lblSex);
        lblSex.setBounds(310, 10, 55, 15);

        _d1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d1.setText("31");
        _d1.setMaximumSize(new java.awt.Dimension(55, 15));
        _d1.setMinimumSize(new java.awt.Dimension(55, 15));
        _d1.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d1);
        _d1.setBounds(10, 30, 55, 15);

        _j1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j1.setForeground(new java.awt.Color(102, 102, 102));
        _j1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j1.setText("355");
        _j1.setMaximumSize(new java.awt.Dimension(55, 15));
        _j1.setMinimumSize(new java.awt.Dimension(55, 15));
        _j1.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j1);
        _j1.setBounds(10, 40, 55, 15);

        _d2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d2.setText("31");
        _d2.setMaximumSize(new java.awt.Dimension(55, 15));
        _d2.setMinimumSize(new java.awt.Dimension(55, 15));
        _d2.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d2);
        _d2.setBounds(70, 30, 55, 15);

        _j2.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j2.setForeground(new java.awt.Color(102, 102, 102));
        _j2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j2.setText("355");
        _j2.setMaximumSize(new java.awt.Dimension(55, 15));
        _j2.setMinimumSize(new java.awt.Dimension(55, 15));
        _j2.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j2);
        _j2.setBounds(70, 40, 55, 15);

        _j3.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j3.setForeground(new java.awt.Color(102, 102, 102));
        _j3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j3.setText("355");
        _j3.setMaximumSize(new java.awt.Dimension(55, 15));
        _j3.setMinimumSize(new java.awt.Dimension(55, 15));
        _j3.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j3);
        _j3.setBounds(130, 40, 55, 15);

        _d3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d3.setText("31");
        _d3.setMaximumSize(new java.awt.Dimension(55, 15));
        _d3.setMinimumSize(new java.awt.Dimension(55, 15));
        _d3.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d3);
        _d3.setBounds(130, 30, 55, 15);

        _j4.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j4.setForeground(new java.awt.Color(102, 102, 102));
        _j4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j4.setText("355");
        _j4.setMaximumSize(new java.awt.Dimension(55, 15));
        _j4.setMinimumSize(new java.awt.Dimension(55, 15));
        _j4.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j4);
        _j4.setBounds(190, 40, 55, 15);

        _d4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d4.setText("31");
        _d4.setMaximumSize(new java.awt.Dimension(55, 15));
        _d4.setMinimumSize(new java.awt.Dimension(55, 15));
        _d4.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d4);
        _d4.setBounds(190, 30, 55, 15);

        _j5.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j5.setForeground(new java.awt.Color(102, 102, 102));
        _j5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j5.setText("355");
        _j5.setMaximumSize(new java.awt.Dimension(55, 15));
        _j5.setMinimumSize(new java.awt.Dimension(55, 15));
        _j5.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j5);
        _j5.setBounds(250, 40, 55, 15);

        _d5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d5.setText("31");
        _d5.setMaximumSize(new java.awt.Dimension(55, 15));
        _d5.setMinimumSize(new java.awt.Dimension(55, 15));
        _d5.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d5);
        _d5.setBounds(250, 30, 55, 15);

        _j6.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j6.setForeground(new java.awt.Color(102, 102, 102));
        _j6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j6.setText("355");
        _j6.setMaximumSize(new java.awt.Dimension(55, 15));
        _j6.setMinimumSize(new java.awt.Dimension(55, 15));
        _j6.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j6);
        _j6.setBounds(310, 40, 55, 15);

        _d6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d6.setText("31");
        _d6.setMaximumSize(new java.awt.Dimension(55, 15));
        _d6.setMinimumSize(new java.awt.Dimension(55, 15));
        _d6.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d6);
        _d6.setBounds(310, 30, 55, 15);

        _d7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d7.setText("31");
        _d7.setMaximumSize(new java.awt.Dimension(55, 15));
        _d7.setMinimumSize(new java.awt.Dimension(55, 15));
        _d7.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d7);
        _d7.setBounds(370, 30, 55, 15);

        _j7.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j7.setForeground(new java.awt.Color(102, 102, 102));
        _j7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j7.setText("355");
        _j7.setMaximumSize(new java.awt.Dimension(55, 15));
        _j7.setMinimumSize(new java.awt.Dimension(55, 15));
        _j7.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j7);
        _j7.setBounds(370, 40, 55, 15);

        _d14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d14.setText("31");
        _d14.setMaximumSize(new java.awt.Dimension(55, 15));
        _d14.setMinimumSize(new java.awt.Dimension(55, 15));
        _d14.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d14);
        _d14.setBounds(370, 60, 55, 15);

        _j14.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j14.setForeground(new java.awt.Color(102, 102, 102));
        _j14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j14.setText("355");
        _j14.setMaximumSize(new java.awt.Dimension(55, 15));
        _j14.setMinimumSize(new java.awt.Dimension(55, 15));
        _j14.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j14);
        _j14.setBounds(370, 70, 55, 15);

        _j13.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j13.setForeground(new java.awt.Color(102, 102, 102));
        _j13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j13.setText("355");
        _j13.setMaximumSize(new java.awt.Dimension(55, 15));
        _j13.setMinimumSize(new java.awt.Dimension(55, 15));
        _j13.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j13);
        _j13.setBounds(310, 70, 55, 15);

        _d13.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d13.setText("31");
        _d13.setMaximumSize(new java.awt.Dimension(55, 15));
        _d13.setMinimumSize(new java.awt.Dimension(55, 15));
        _d13.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d13);
        _d13.setBounds(310, 60, 55, 15);

        _j12.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j12.setForeground(new java.awt.Color(102, 102, 102));
        _j12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j12.setText("355");
        _j12.setMaximumSize(new java.awt.Dimension(55, 15));
        _j12.setMinimumSize(new java.awt.Dimension(55, 15));
        _j12.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j12);
        _j12.setBounds(250, 70, 55, 15);

        _d12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d12.setText("31");
        _d12.setMaximumSize(new java.awt.Dimension(55, 15));
        _d12.setMinimumSize(new java.awt.Dimension(55, 15));
        _d12.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d12);
        _d12.setBounds(250, 60, 55, 15);

        _j11.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j11.setForeground(new java.awt.Color(102, 102, 102));
        _j11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j11.setText("355");
        _j11.setMaximumSize(new java.awt.Dimension(55, 15));
        _j11.setMinimumSize(new java.awt.Dimension(55, 15));
        _j11.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j11);
        _j11.setBounds(190, 70, 55, 15);

        _d11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d11.setText("31");
        _d11.setMaximumSize(new java.awt.Dimension(55, 15));
        _d11.setMinimumSize(new java.awt.Dimension(55, 15));
        _d11.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d11);
        _d11.setBounds(190, 60, 55, 15);

        _j10.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j10.setForeground(new java.awt.Color(102, 102, 102));
        _j10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j10.setText("355");
        _j10.setMaximumSize(new java.awt.Dimension(55, 15));
        _j10.setMinimumSize(new java.awt.Dimension(55, 15));
        _j10.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j10);
        _j10.setBounds(130, 70, 55, 15);

        _d10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d10.setText("31");
        _d10.setMaximumSize(new java.awt.Dimension(55, 15));
        _d10.setMinimumSize(new java.awt.Dimension(55, 15));
        _d10.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d10);
        _d10.setBounds(130, 60, 55, 15);

        _j9.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j9.setForeground(new java.awt.Color(102, 102, 102));
        _j9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j9.setText("355");
        _j9.setMaximumSize(new java.awt.Dimension(55, 15));
        _j9.setMinimumSize(new java.awt.Dimension(55, 15));
        _j9.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j9);
        _j9.setBounds(70, 70, 55, 15);

        _d9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d9.setText("31");
        _d9.setMaximumSize(new java.awt.Dimension(55, 15));
        _d9.setMinimumSize(new java.awt.Dimension(55, 15));
        _d9.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d9);
        _d9.setBounds(70, 60, 55, 15);

        _d21.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d21.setText("31");
        _d21.setMaximumSize(new java.awt.Dimension(55, 15));
        _d21.setMinimumSize(new java.awt.Dimension(55, 15));
        _d21.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d21);
        _d21.setBounds(370, 90, 55, 15);

        _j20.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j20.setForeground(new java.awt.Color(102, 102, 102));
        _j20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j20.setText("355");
        _j20.setMaximumSize(new java.awt.Dimension(55, 15));
        _j20.setMinimumSize(new java.awt.Dimension(55, 15));
        _j20.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j20);
        _j20.setBounds(310, 100, 55, 15);

        _d16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d16.setText("31");
        _d16.setMaximumSize(new java.awt.Dimension(55, 15));
        _d16.setMinimumSize(new java.awt.Dimension(55, 15));
        _d16.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d16);
        _d16.setBounds(70, 90, 55, 15);

        _d18.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d18.setText("31");
        _d18.setMaximumSize(new java.awt.Dimension(55, 15));
        _d18.setMinimumSize(new java.awt.Dimension(55, 15));
        _d18.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d18);
        _d18.setBounds(190, 90, 55, 15);

        _j18.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j18.setForeground(new java.awt.Color(102, 102, 102));
        _j18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j18.setText("355");
        _j18.setMaximumSize(new java.awt.Dimension(55, 15));
        _j18.setMinimumSize(new java.awt.Dimension(55, 15));
        _j18.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j18);
        _j18.setBounds(190, 100, 55, 15);

        _d17.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d17.setText("31");
        _d17.setMaximumSize(new java.awt.Dimension(55, 15));
        _d17.setMinimumSize(new java.awt.Dimension(55, 15));
        _d17.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d17);
        _d17.setBounds(130, 90, 55, 15);

        _j17.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j17.setForeground(new java.awt.Color(102, 102, 102));
        _j17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j17.setText("355");
        _j17.setMaximumSize(new java.awt.Dimension(55, 15));
        _j17.setMinimumSize(new java.awt.Dimension(55, 15));
        _j17.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j17);
        _j17.setBounds(130, 100, 55, 15);

        _d19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d19.setText("31");
        _d19.setMaximumSize(new java.awt.Dimension(55, 15));
        _d19.setMinimumSize(new java.awt.Dimension(55, 15));
        _d19.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d19);
        _d19.setBounds(250, 90, 55, 15);

        _j16.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j16.setForeground(new java.awt.Color(102, 102, 102));
        _j16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j16.setText("355");
        _j16.setMaximumSize(new java.awt.Dimension(55, 15));
        _j16.setMinimumSize(new java.awt.Dimension(55, 15));
        _j16.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j16);
        _j16.setBounds(70, 100, 55, 15);

        _j19.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j19.setForeground(new java.awt.Color(102, 102, 102));
        _j19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j19.setText("355");
        _j19.setMaximumSize(new java.awt.Dimension(55, 15));
        _j19.setMinimumSize(new java.awt.Dimension(55, 15));
        _j19.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j19);
        _j19.setBounds(250, 100, 55, 15);

        _d20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d20.setText("31");
        _d20.setMaximumSize(new java.awt.Dimension(55, 15));
        _d20.setMinimumSize(new java.awt.Dimension(55, 15));
        _d20.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d20);
        _d20.setBounds(310, 90, 55, 15);

        _j21.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j21.setForeground(new java.awt.Color(102, 102, 102));
        _j21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j21.setText("355");
        _j21.setMaximumSize(new java.awt.Dimension(55, 15));
        _j21.setMinimumSize(new java.awt.Dimension(55, 15));
        _j21.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j21);
        _j21.setBounds(370, 100, 55, 15);

        _d26.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d26.setText("31");
        _d26.setMaximumSize(new java.awt.Dimension(55, 15));
        _d26.setMinimumSize(new java.awt.Dimension(55, 15));
        _d26.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d26);
        _d26.setBounds(250, 120, 55, 15);

        _j24.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j24.setForeground(new java.awt.Color(102, 102, 102));
        _j24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j24.setText("355");
        _j24.setMaximumSize(new java.awt.Dimension(55, 15));
        _j24.setMinimumSize(new java.awt.Dimension(55, 15));
        _j24.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j24);
        _j24.setBounds(130, 130, 55, 15);

        _d25.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d25.setText("31");
        _d25.setMaximumSize(new java.awt.Dimension(55, 15));
        _d25.setMinimumSize(new java.awt.Dimension(55, 15));
        _d25.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d25);
        _d25.setBounds(190, 120, 55, 15);

        _j26.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j26.setForeground(new java.awt.Color(102, 102, 102));
        _j26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j26.setText("355");
        _j26.setMaximumSize(new java.awt.Dimension(55, 15));
        _j26.setMinimumSize(new java.awt.Dimension(55, 15));
        _j26.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j26);
        _j26.setBounds(250, 130, 55, 15);

        _d23.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d23.setText("31");
        _d23.setMaximumSize(new java.awt.Dimension(55, 15));
        _d23.setMinimumSize(new java.awt.Dimension(55, 15));
        _d23.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d23);
        _d23.setBounds(70, 120, 55, 15);

        _d24.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d24.setText("31");
        _d24.setMaximumSize(new java.awt.Dimension(55, 15));
        _d24.setMinimumSize(new java.awt.Dimension(55, 15));
        _d24.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d24);
        _d24.setBounds(130, 120, 55, 15);

        _j27.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j27.setForeground(new java.awt.Color(102, 102, 102));
        _j27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j27.setText("355");
        _j27.setMaximumSize(new java.awt.Dimension(55, 15));
        _j27.setMinimumSize(new java.awt.Dimension(55, 15));
        _j27.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j27);
        _j27.setBounds(310, 130, 55, 15);

        _d28.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d28.setText("31");
        _d28.setMaximumSize(new java.awt.Dimension(55, 15));
        _d28.setMinimumSize(new java.awt.Dimension(55, 15));
        _d28.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d28);
        _d28.setBounds(370, 120, 55, 15);

        _j23.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j23.setForeground(new java.awt.Color(102, 102, 102));
        _j23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j23.setText("355");
        _j23.setMaximumSize(new java.awt.Dimension(55, 15));
        _j23.setMinimumSize(new java.awt.Dimension(55, 15));
        _j23.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j23);
        _j23.setBounds(70, 130, 55, 15);

        _j28.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j28.setForeground(new java.awt.Color(102, 102, 102));
        _j28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j28.setText("355");
        _j28.setMaximumSize(new java.awt.Dimension(55, 15));
        _j28.setMinimumSize(new java.awt.Dimension(55, 15));
        _j28.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j28);
        _j28.setBounds(370, 130, 55, 15);

        _d27.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d27.setText("31");
        _d27.setMaximumSize(new java.awt.Dimension(55, 15));
        _d27.setMinimumSize(new java.awt.Dimension(55, 15));
        _d27.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d27);
        _d27.setBounds(310, 120, 55, 15);

        _j25.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j25.setForeground(new java.awt.Color(102, 102, 102));
        _j25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j25.setText("355");
        _j25.setMaximumSize(new java.awt.Dimension(55, 15));
        _j25.setMinimumSize(new java.awt.Dimension(55, 15));
        _j25.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j25);
        _j25.setBounds(190, 130, 55, 15);

        _d30.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d30.setText("31");
        _d30.setMaximumSize(new java.awt.Dimension(55, 15));
        _d30.setMinimumSize(new java.awt.Dimension(55, 15));
        _d30.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d30);
        _d30.setBounds(70, 150, 55, 15);

        _j30.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j30.setForeground(new java.awt.Color(102, 102, 102));
        _j30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j30.setText("355");
        _j30.setMaximumSize(new java.awt.Dimension(55, 15));
        _j30.setMinimumSize(new java.awt.Dimension(55, 15));
        _j30.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j30);
        _j30.setBounds(70, 160, 55, 15);

        _j31.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j31.setForeground(new java.awt.Color(102, 102, 102));
        _j31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j31.setText("355");
        _j31.setMaximumSize(new java.awt.Dimension(55, 15));
        _j31.setMinimumSize(new java.awt.Dimension(55, 15));
        _j31.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j31);
        _j31.setBounds(130, 160, 55, 15);

        _d31.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d31.setText("31");
        _d31.setMaximumSize(new java.awt.Dimension(55, 15));
        _d31.setMinimumSize(new java.awt.Dimension(55, 15));
        _d31.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d31);
        _d31.setBounds(130, 150, 55, 15);

        _d32.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d32.setText("31");
        _d32.setMaximumSize(new java.awt.Dimension(55, 15));
        _d32.setMinimumSize(new java.awt.Dimension(55, 15));
        _d32.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d32);
        _d32.setBounds(190, 150, 55, 15);

        _j32.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j32.setForeground(new java.awt.Color(102, 102, 102));
        _j32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j32.setText("355");
        _j32.setMaximumSize(new java.awt.Dimension(55, 15));
        _j32.setMinimumSize(new java.awt.Dimension(55, 15));
        _j32.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j32);
        _j32.setBounds(190, 160, 55, 15);

        _d33.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d33.setText("31");
        _d33.setMaximumSize(new java.awt.Dimension(55, 15));
        _d33.setMinimumSize(new java.awt.Dimension(55, 15));
        _d33.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d33);
        _d33.setBounds(250, 150, 55, 15);

        _j33.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j33.setForeground(new java.awt.Color(102, 102, 102));
        _j33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j33.setText("355");
        _j33.setMaximumSize(new java.awt.Dimension(55, 15));
        _j33.setMinimumSize(new java.awt.Dimension(55, 15));
        _j33.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j33);
        _j33.setBounds(250, 160, 55, 15);

        _j34.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j34.setForeground(new java.awt.Color(102, 102, 102));
        _j34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j34.setText("355");
        _j34.setMaximumSize(new java.awt.Dimension(55, 15));
        _j34.setMinimumSize(new java.awt.Dimension(55, 15));
        _j34.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j34);
        _j34.setBounds(310, 160, 55, 15);

        _d35.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d35.setText("31");
        _d35.setMaximumSize(new java.awt.Dimension(55, 15));
        _d35.setMinimumSize(new java.awt.Dimension(55, 15));
        _d35.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d35);
        _d35.setBounds(370, 150, 55, 15);

        _j35.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j35.setForeground(new java.awt.Color(102, 102, 102));
        _j35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j35.setText("355");
        _j35.setMaximumSize(new java.awt.Dimension(55, 15));
        _j35.setMinimumSize(new java.awt.Dimension(55, 15));
        _j35.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j35);
        _j35.setBounds(370, 160, 55, 15);

        _d34.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d34.setText("31");
        _d34.setMaximumSize(new java.awt.Dimension(55, 15));
        _d34.setMinimumSize(new java.awt.Dimension(55, 15));
        _d34.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d34);
        _d34.setBounds(310, 150, 55, 15);

        _j41.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j41.setForeground(new java.awt.Color(102, 102, 102));
        _j41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j41.setText("355");
        _j41.setMaximumSize(new java.awt.Dimension(55, 15));
        _j41.setMinimumSize(new java.awt.Dimension(55, 15));
        _j41.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j41);
        _j41.setBounds(310, 190, 55, 15);

        _d40.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d40.setText("31");
        _d40.setMaximumSize(new java.awt.Dimension(55, 15));
        _d40.setMinimumSize(new java.awt.Dimension(55, 15));
        _d40.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d40);
        _d40.setBounds(250, 180, 55, 15);

        _j42.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j42.setForeground(new java.awt.Color(102, 102, 102));
        _j42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j42.setText("355");
        _j42.setMaximumSize(new java.awt.Dimension(55, 15));
        _j42.setMinimumSize(new java.awt.Dimension(55, 15));
        _j42.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j42);
        _j42.setBounds(370, 190, 55, 15);

        _d39.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d39.setText("31");
        _d39.setMaximumSize(new java.awt.Dimension(55, 15));
        _d39.setMinimumSize(new java.awt.Dimension(55, 15));
        _d39.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d39);
        _d39.setBounds(190, 180, 55, 15);

        _d38.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d38.setText("31");
        _d38.setMaximumSize(new java.awt.Dimension(55, 15));
        _d38.setMinimumSize(new java.awt.Dimension(55, 15));
        _d38.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d38);
        _d38.setBounds(130, 180, 55, 15);

        _d41.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d41.setText("31");
        _d41.setMaximumSize(new java.awt.Dimension(55, 15));
        _d41.setMinimumSize(new java.awt.Dimension(55, 15));
        _d41.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d41);
        _d41.setBounds(310, 180, 55, 15);

        _j39.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j39.setForeground(new java.awt.Color(102, 102, 102));
        _j39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j39.setText("355");
        _j39.setMaximumSize(new java.awt.Dimension(55, 15));
        _j39.setMinimumSize(new java.awt.Dimension(55, 15));
        _j39.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j39);
        _j39.setBounds(190, 190, 55, 15);

        _d42.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d42.setText("31");
        _d42.setMaximumSize(new java.awt.Dimension(55, 15));
        _d42.setMinimumSize(new java.awt.Dimension(55, 15));
        _d42.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d42);
        _d42.setBounds(370, 180, 55, 15);

        _j40.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j40.setForeground(new java.awt.Color(102, 102, 102));
        _j40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j40.setText("355");
        _j40.setMaximumSize(new java.awt.Dimension(55, 15));
        _j40.setMinimumSize(new java.awt.Dimension(55, 15));
        _j40.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j40);
        _j40.setBounds(250, 190, 55, 15);

        _j38.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j38.setForeground(new java.awt.Color(102, 102, 102));
        _j38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j38.setText("355");
        _j38.setMaximumSize(new java.awt.Dimension(55, 15));
        _j38.setMinimumSize(new java.awt.Dimension(55, 15));
        _j38.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j38);
        _j38.setBounds(130, 190, 55, 15);

        _j37.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j37.setForeground(new java.awt.Color(102, 102, 102));
        _j37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j37.setText("355");
        _j37.setMaximumSize(new java.awt.Dimension(55, 15));
        _j37.setMinimumSize(new java.awt.Dimension(55, 15));
        _j37.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j37);
        _j37.setBounds(70, 190, 55, 15);

        _d37.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d37.setText("31");
        _d37.setMaximumSize(new java.awt.Dimension(55, 15));
        _d37.setMinimumSize(new java.awt.Dimension(55, 15));
        _d37.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d37);
        _d37.setBounds(70, 180, 55, 15);

        _d8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d8.setText("31");
        _d8.setMaximumSize(new java.awt.Dimension(55, 15));
        _d8.setMinimumSize(new java.awt.Dimension(55, 15));
        _d8.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d8);
        _d8.setBounds(10, 60, 55, 15);

        _j8.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j8.setForeground(new java.awt.Color(102, 102, 102));
        _j8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j8.setText("355");
        _j8.setMaximumSize(new java.awt.Dimension(55, 15));
        _j8.setMinimumSize(new java.awt.Dimension(55, 15));
        _j8.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j8);
        _j8.setBounds(10, 70, 55, 15);

        _j22.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j22.setForeground(new java.awt.Color(102, 102, 102));
        _j22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j22.setText("355");
        _j22.setMaximumSize(new java.awt.Dimension(55, 15));
        _j22.setMinimumSize(new java.awt.Dimension(55, 15));
        _j22.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j22);
        _j22.setBounds(10, 130, 55, 15);

        _d22.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d22.setText("31");
        _d22.setMaximumSize(new java.awt.Dimension(55, 15));
        _d22.setMinimumSize(new java.awt.Dimension(55, 15));
        _d22.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d22);
        _d22.setBounds(10, 120, 55, 15);

        _j15.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j15.setForeground(new java.awt.Color(102, 102, 102));
        _j15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j15.setText("355");
        _j15.setMaximumSize(new java.awt.Dimension(55, 15));
        _j15.setMinimumSize(new java.awt.Dimension(55, 15));
        _j15.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j15);
        _j15.setBounds(10, 100, 55, 15);

        _d15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d15.setText("31");
        _d15.setMaximumSize(new java.awt.Dimension(55, 15));
        _d15.setMinimumSize(new java.awt.Dimension(55, 15));
        _d15.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d15);
        _d15.setBounds(10, 90, 55, 15);

        _d29.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d29.setText("31");
        _d29.setMaximumSize(new java.awt.Dimension(55, 15));
        _d29.setMinimumSize(new java.awt.Dimension(55, 15));
        _d29.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d29);
        _d29.setBounds(10, 150, 55, 15);

        _j29.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j29.setForeground(new java.awt.Color(102, 102, 102));
        _j29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j29.setText("355");
        _j29.setMaximumSize(new java.awt.Dimension(55, 15));
        _j29.setMinimumSize(new java.awt.Dimension(55, 15));
        _j29.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j29);
        _j29.setBounds(10, 160, 55, 15);

        _d36.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        _d36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _d36.setText("31");
        _d36.setMaximumSize(new java.awt.Dimension(55, 15));
        _d36.setMinimumSize(new java.awt.Dimension(55, 15));
        _d36.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_d36);
        _d36.setBounds(10, 180, 55, 15);

        _j36.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        _j36.setForeground(new java.awt.Color(102, 102, 102));
        _j36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _j36.setText("355");
        _j36.setMaximumSize(new java.awt.Dimension(55, 15));
        _j36.setMinimumSize(new java.awt.Dimension(55, 15));
        _j36.setPreferredSize(new java.awt.Dimension(55, 15));
        jPanel8.add(_j36);
        _j36.setBounds(10, 190, 55, 15);

        javax.swing.GroupLayout panelCalendarioLayout = new javax.swing.GroupLayout(panelCalendario);
        panelCalendario.setLayout(panelCalendarioLayout);
        panelCalendarioLayout.setHorizontalGroup(
            panelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCalendarioLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(panelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelCalendarioLayout.createSequentialGroup()
                        .addComponent(btnAnoAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMesAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMesProximo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAnoProximo))
                    .addGroup(panelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelCalendarioLayout.createSequentialGroup()
                            .addComponent(lblAno)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblMes)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnOk)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnHoje, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        panelCalendarioLayout.setVerticalGroup(
            panelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCalendarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAno)
                    .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMes)
                    .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOk)
                    .addComponent(btnHoje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnoAnterior)
                    .addComponent(btnAnoProximo)
                    .addComponent(btnMesProximo)
                    .addComponent(lblData)
                    .addComponent(btnMesAnterior))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        tabCalendario.addTab("Calendario", panelCalendario);

        jLabel21.setText("Web");

        jLabel23.setText("Autorizadores");

        copiarCkWebCatalina.setText("catalina");
        copiarCkWebCatalina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarCkWebCatalinaActionPerformed(evt);
            }
        });

        copiarCkWebLocalhost.setText("localhost");

        copiarCkWebLocalhostAccess.setText("localhost_access");

        copiarCkWebDoitClient.setText("doit-client");

        copiarCkWebAbertura.setText("abertura");

        copiarCkWebTelematica.setText("telematica");

        copiarCkWebWscetelem.setText("wscetelem");

        copiarCkWebWstelem.setText("wstelem");

        copiarCkWebSmsCyber.setText("sms/cyber");

        copiarCkAutMaster1.setText("Master 1");

        copiarCkAutMaster2.setText("Master 2");

        copiarCkAutMaster3.setText("Master 3");

        copiarCkAutMaster4.setText("Master 4");

        copiarCkAutAura.setText("Aura");

        copiarCkAutTecban.setText("Tecban");

        copiarCkAutItautec.setText("Itautec");

        jLabel24.setText("Hoje + quantos dias?");

        copiarTxtQtDias.setText("0");
        copiarTxtQtDias.setToolTipText("");

        jLabel25.setText("Destino:");

        copiarLblDestino.setText("...");

        copiarBtnProcurar.setText("[...]");
        copiarBtnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarBtnProcurarActionPerformed(evt);
            }
        });

        copiarBtnIniciarCopia.setText("copiar");
        copiarBtnIniciarCopia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarBtnIniciarCopiaActionPerformed(evt);
            }
        });

        jLabel26.setText("Log:");

        copiarTxtAreaLog.setColumns(20);
        copiarTxtAreaLog.setRows(5);
        copiarScrollLog.setViewportView(copiarTxtAreaLog);

        javax.swing.GroupLayout panelCopiarLayout = new javax.swing.GroupLayout(panelCopiar);
        panelCopiar.setLayout(panelCopiarLayout);
        panelCopiarLayout.setHorizontalGroup(
            panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCopiarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copiarScrollLog)
                    .addGroup(panelCopiarLayout.createSequentialGroup()
                        .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCopiarLayout.createSequentialGroup()
                                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(copiarCkWebWstelem)
                                    .addComponent(copiarCkWebWscetelem)
                                    .addComponent(copiarCkWebTelematica)
                                    .addComponent(copiarCkWebAbertura)
                                    .addComponent(copiarCkWebDoitClient)
                                    .addComponent(copiarCkWebLocalhostAccess)
                                    .addComponent(copiarCkWebLocalhost)
                                    .addComponent(copiarCkWebCatalina))
                                .addGap(138, 138, 138)
                                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(copiarCkAutMaster2)
                                    .addComponent(copiarCkAutMaster1)
                                    .addComponent(copiarCkAutMaster3)
                                    .addComponent(copiarCkAutMaster4)
                                    .addComponent(copiarCkAutAura)
                                    .addComponent(copiarCkAutTecban)
                                    .addComponent(copiarCkAutItautec)
                                    .addComponent(jLabel23)))
                            .addComponent(jLabel26)
                            .addComponent(copiarCkWebSmsCyber)
                            .addGroup(panelCopiarLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(copiarTxtQtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelCopiarLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(copiarBtnProcurar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(copiarLblDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(copiarBtnIniciarCopia, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelCopiarLayout.setVerticalGroup(
            panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCopiarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiarCkWebCatalina)
                    .addComponent(copiarCkAutMaster1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiarCkWebLocalhost)
                    .addComponent(copiarCkAutMaster2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiarCkWebLocalhostAccess)
                    .addComponent(copiarCkAutMaster3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiarCkWebDoitClient)
                    .addComponent(copiarCkAutMaster4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiarCkWebAbertura)
                    .addComponent(copiarCkAutAura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiarCkWebTelematica)
                    .addComponent(copiarCkAutTecban))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiarCkWebWscetelem)
                    .addComponent(copiarCkAutItautec))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copiarCkWebWstelem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copiarCkWebSmsCyber)
                .addGap(18, 18, 18)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(copiarTxtQtDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCopiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(copiarLblDestino)
                    .addComponent(copiarBtnProcurar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copiarBtnIniciarCopia)
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copiarScrollLog, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabCalendario.addTab("Copiar (prod)", panelCopiar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabCalendario)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabCalendario)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
     0 Html
     1 Hexa
     2 Unicode
     3 Binário
     4 Texto Normal
     * @param evt 
     */
    private void strRplcOrigemBtnConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strRplcOrigemBtnConverterActionPerformed
        final int origem = strRplcOrigem.getSelectedIndex();
        final int destino = strRplcOrigemDestino.getSelectedIndex();
        final String texto = strRplcOrigemTxtArea.getText();

        if (texto == null || "".equals(texto) || "".equals(texto.trim())) {
            mensagemErro("Informe o texto que deve ser convertido");
            return;
        }

        if ((origem == 3 && destino != 1) || (destino == 3 && origem != 1)) {
            mensagemErro("Binário só pode ser convertido para/de Hexa");
            return;
        }

        strRplcOrigemTxtArea.setText(converter(origem, destino, texto));
    }//GEN-LAST:event_strRplcOrigemBtnConverterActionPerformed

    private void cvcBtnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvcBtnGerarActionPerformed
        if (validarParametros()) {
            try {
                final String cartao = cvcTxtNumeroCartao.getText();
                final String data = cvcTxtDataValidade.getText();
                String bandeira = "";
                if (cvcBandeiraAU.isSelected()) bandeira = "AU";
                if (cvcBandeiraMC.isSelected()) bandeira = "MC";
                if (cvcBandeiraTB.isSelected()) bandeira = "TB";
                if (cvcBandeiraVS.isSelected()) bandeira = "VS";

                gerarCVCs(cartao, data, bandeira);
            } catch (Exception ex) {
                mensagemErro("Erro: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_cvcBtnGerarActionPerformed

    private void cvcBandeiraVSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvcBandeiraVSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cvcBandeiraVSActionPerformed

    private void directBtnResponseLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnResponseLimparActionPerformed
        directTxtAreaResponse.setText("");
    }//GEN-LAST:event_directBtnResponseLimparActionPerformed

    private void directBtnResponseToStrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnResponseToStrActionPerformed
        try {
            final String selecionado = directTxtAreaResponse.getSelectedText();
            final String convertido = ConversorHsm.stringByte(selecionado);
            final String textoCompleto = directTxtAreaResponse.getText();
            directTxtAreaResponse.setText(ConversorHsm.replace(textoCompleto, selecionado, convertido));
        } catch (Exception ex) {
            mensagemErro("Erro ["+ex.getMessage()+"] na conversao do texto selecionado");
        }
    }//GEN-LAST:event_directBtnResponseToStrActionPerformed

    private void directBtnResponseToBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnResponseToBinActionPerformed
        try {
            final String selecionado = directTxtAreaResponse.getSelectedText();
            final String convertido = new String(ConversorHsm.parseHexString(selecionado));
            String textoCompleto = directTxtAreaResponse.getText();
            directTxtAreaResponse.setText(ConversorHsm.replace(textoCompleto, selecionado, convertido));
        } catch (Exception ex) {
            mensagemErro("Erro ["+ex.getMessage()+"] na conversao do texto selecionado");
        }
    }//GEN-LAST:event_directBtnResponseToBinActionPerformed

    private void directBtnRequestEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnRequestEnviarActionPerformed
        validarTratarEnviarComando();
    }//GEN-LAST:event_directBtnRequestEnviarActionPerformed

    private void directBtnRequestDe55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnRequestDe55ActionPerformed
        final String de55 = directTxtAreaRequest.getText();
        try {
            if (de55 != null && !"".equals(de55.trim()) && !de55.trim().contains(" ")) {
                directTxtAreaRequest.setText(de55 + "\n" + ParseDE55.parseDe55(de55.trim()));
            }
        } catch (Exception ex) {
            mensagemErro("Ocorreu um erro ao quebrar a string informada:\n" + ex.getMessage());
        }
    }//GEN-LAST:event_directBtnRequestDe55ActionPerformed

    private void directBtnRequestSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnRequestSalvarActionPerformed
        try {
            AcoesComuns.salvarEmArquivo(this, VariaveisComuns.HISTORICO_DIRECT);
        } catch (Exception ex) {
            mensagemErro("Erro ["+ex.getMessage()+"] ao salvar o historico");
        }
    }//GEN-LAST:event_directBtnRequestSalvarActionPerformed

    private void directBtnRequestLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnRequestLimparActionPerformed
        directTxtAreaRequest.setText("");
    }//GEN-LAST:event_directBtnRequestLimparActionPerformed

    private void directBtnRequestToStrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnRequestToStrActionPerformed
        try {
            final String selecionado = directTxtAreaRequest.getSelectedText();
            final String convertido = ConversorHsm.stringByte(selecionado);
            final String textoCompleto = directTxtAreaRequest.getText();
            directTxtAreaRequest.setText(ConversorHsm.replace(textoCompleto, selecionado, convertido));
        } catch (Exception ex) {
            mensagemErro("Erro ["+ex.getMessage()+"] na conversao do texto selecionado");
        }
    }//GEN-LAST:event_directBtnRequestToStrActionPerformed

    private void directBtnRequestToBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directBtnRequestToBinActionPerformed
        try {
            final String selecionado = directTxtAreaRequest.getSelectedText();
            final String convertido = new String(ConversorHsm.parseHexString(selecionado));
            String textoCompleto = directTxtAreaRequest.getText();
            directTxtAreaRequest.setText(ConversorHsm.replace(textoCompleto, selecionado, convertido));
        } catch (Exception ex) {
            mensagemErro("Erro ["+ex.getMessage()+"] na conversao do texto selecionado");
        }
    }//GEN-LAST:event_directBtnRequestToBinActionPerformed

    private void directComboHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directComboHistoricoActionPerformed
        directTxtAreaRequest.setText((String)directComboHistorico.getModel().getSelectedItem());
    }//GEN-LAST:event_directComboHistoricoActionPerformed

    private void directComboExemplosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directComboExemplosActionPerformed
        final String selecionado = (String) directComboExemplos.getModel().getSelectedItem();
        directTxtAreaRequest.setText(VariaveisComuns.EXEMPLOS_DIRECT.get(selecionado));
    }//GEN-LAST:event_directComboExemplosActionPerformed

    private void directCheckDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directCheckDeviceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_directCheckDeviceActionPerformed

    private void cpfBtnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfBtnCriarActionPerformed
        if (validar()) {
            criar();
        }
    }//GEN-LAST:event_cpfBtnCriarActionPerformed

    private void cpfSliderMuitosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cpfSliderMuitosStateChanged
        cpfLblQuantidade.setText(cpfSliderMuitos.getValue() + "");
    }//GEN-LAST:event_cpfSliderMuitosStateChanged

    private void cpfRadioQuantidadeMuitosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cpfRadioQuantidadeMuitosStateChanged
        if (cpfRadioQuantidadeUm.isSelected()) {
            cpfSliderMuitos.setEnabled(false);
        }
        if (cpfRadioQuantidadeMuitos.isSelected()) {
            cpfSliderMuitos.setEnabled(true);
        }
    }//GEN-LAST:event_cpfRadioQuantidadeMuitosStateChanged

    private void cpfRadioQuantidadeUmStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cpfRadioQuantidadeUmStateChanged
        if (cpfRadioQuantidadeUm.isSelected()) {
            cpfSliderMuitos.setEnabled(false);
        }
        if (cpfRadioQuantidadeMuitos.isSelected()) {
            cpfSliderMuitos.setEnabled(true);
        }
    }//GEN-LAST:event_cpfRadioQuantidadeUmStateChanged

    private void cpfTxtPrefixoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpfTxtPrefixoKeyTyped
        if (cpfTxtPrefixo.getText().length() == 9) {
            evt.consume();
        }
    }//GEN-LAST:event_cpfTxtPrefixoKeyTyped

    private void cpfRadioPrefixoInformadoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cpfRadioPrefixoInformadoStateChanged
        if (cpfRadioPrefixoAleatorio.isSelected()) {
            cpfTxtPrefixo.setEnabled(false);
        }
        if (cpfRadioPrefixoInformado.isSelected()) {
            cpfTxtPrefixo.setEnabled(true);
        }
    }//GEN-LAST:event_cpfRadioPrefixoInformadoStateChanged

    private void cpfRadioPrefixoAleatorioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cpfRadioPrefixoAleatorioStateChanged
        if (cpfRadioPrefixoAleatorio.isSelected()) {
            cpfTxtPrefixo.setEnabled(false);
        }
        if (cpfRadioPrefixoInformado.isSelected()) {
            cpfTxtPrefixo.setEnabled(true);
        }
    }//GEN-LAST:event_cpfRadioPrefixoAleatorioStateChanged

    private void cryptoBtnAbrirMuitosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnAbrirMuitosActionPerformed
        try {
            for (TreePath atual : cryptoArvoreMaquinas.getSelectionPaths()) {
                final String maquinaSelecionada = (String) ((DefaultMutableTreeNode)atual.getLastPathComponent()).getUserObject();
                final String nomeMaquina = maquinaSelecionada.contains(">") ? maquinaSelecionada.split(">")[0].trim() : maquinaSelecionada;
                if (VariaveisComuns.MAQUINAS_TODAS.containsKey(nomeMaquina)) {
                    try {
                        TerminalUtil.executarTerminal(VariaveisComuns.MAQUINAS_TODAS.get(nomeMaquina));
                    } catch (Exception ex) {
                        mensagemErro("Erro ["+ex.getMessage()+"] ao abrir ao abrir terminal para ["+nomeMaquina+"]");
                    }
                }
            }

        } catch (Exception ex) {
            mensagemErro("Erro ["+ex.getMessage()+"] ao tentar abrir varios terminais");
        }
    }//GEN-LAST:event_cryptoBtnAbrirMuitosActionPerformed

    private void cryptoBtnBloquearTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnBloquearTelaActionPerformed
        VariaveisComuns.BLOQUEIO_COM_SENHA = !VariaveisComuns.BLOQUEIO_COM_SENHA;
        String texto;
        if (VariaveisComuns.BLOQUEIO_COM_SENHA) {
            texto = "O aplicativo precisa de senha para ser aberto";
            cryptoBtnBloquearTela.setText("desbloquear tela");
        } else {
            texto = "tudo liberado";
            cryptoBtnBloquearTela.setText("bloquear tela");
        }
        mensagemAviso(texto);
    }//GEN-LAST:event_cryptoBtnBloquearTelaActionPerformed

    private void cryptoBtnNovaMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnNovaMaquinaActionPerformed
        janelaAddEdit.preparar(AdicionarEditarCrypto.ADICIONAR, VariaveisComuns.MAQUINAS_TODAS.get(VariaveisComuns.NOME_MAQUINA_SELECIONADA), this);
        janelaAddEdit.setVisible(true);
    }//GEN-LAST:event_cryptoBtnNovaMaquinaActionPerformed

    private void cryptoBtnAbrirTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnAbrirTerminalActionPerformed
        try {
            if (VariaveisComuns.MAQUINAS_TODAS.containsKey(VariaveisComuns.NOME_MAQUINA_SELECIONADA)) {
                TerminalUtil.executarTerminal(VariaveisComuns.MAQUINAS_TODAS.get(VariaveisComuns.NOME_MAQUINA_SELECIONADA));
            } else {
                mensagemErro("Selecione uma maquina");
            }
        } catch (Exception ex) {
            mensagemAviso("Erro [" + ex.getMessage() + "] ao tentar abrir o terminal");
        }
    }//GEN-LAST:event_cryptoBtnAbrirTerminalActionPerformed

    private void cryptoBtnEdicaoAvancadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnEdicaoAvancadaActionPerformed
        if (VariaveisComuns.MAQUINAS_TODAS.containsKey(VariaveisComuns.NOME_MAQUINA_SELECIONADA)) {
            janelaAddEdit.preparar(AdicionarEditarCrypto.EDITAR, VariaveisComuns.MAQUINAS_TODAS.get(VariaveisComuns.NOME_MAQUINA_SELECIONADA), this);
            janelaAddEdit.setVisible(true);
        }
    }//GEN-LAST:event_cryptoBtnEdicaoAvancadaActionPerformed

    private void cryptoBtnAlterarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnAlterarSenhaActionPerformed
        final String nomeMaquina = VariaveisComuns.NOME_MAQUINA_SELECIONADA;
        final int op = JOptionPane.showConfirmDialog(getContentPane(), "Tem certeza que deseja alterar a senha para o servidor \"" + nomeMaquina + "\"?");
        if (op == JOptionPane.OK_OPTION) {
            final String novaSenha = JOptionPane.showInputDialog(getContentPane(), "Informe a nova senha");
            if (novaSenha != null && !"".equals(novaSenha) && !"".equals(novaSenha.trim())) {
                CryptoPass.mudarSenhaMaquina(nomeMaquina, novaSenha);
                AcoesComuns.procurarProperties();
                mudarLabels(nomeMaquina);
            } else {
                JOptionPane.showMessageDialog(getContentPane(), "senha invalida");
            }
        }
    }//GEN-LAST:event_cryptoBtnAlterarSenhaActionPerformed

    private void cryptoBtnDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnDetalhesActionPerformed
        if (VariaveisComuns.MAQUINAS_TODAS.containsKey(VariaveisComuns.NOME_MAQUINA_SELECIONADA)) {
            janelaAddEdit.preparar(AdicionarEditarCrypto.VER, VariaveisComuns.MAQUINAS_TODAS.get(VariaveisComuns.NOME_MAQUINA_SELECIONADA), null);
            janelaAddEdit.setVisible(true);
        }

    }//GEN-LAST:event_cryptoBtnDetalhesActionPerformed

    private void cryptoBtnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnCopiarActionPerformed
        AcoesComuns.copiarParaAreaTransferencia(VariaveisComuns.SENHA_SELECIONADA_COMPLETA);
    }//GEN-LAST:event_cryptoBtnCopiarActionPerformed

    private void cryptoBtnMostrarOcultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cryptoBtnMostrarOcultarActionPerformed
        final String pass = mostrandoSenhaAberta ? VariaveisComuns.SENHA_SELECIONADA_ABREVIADA : VariaveisComuns.SENHA_SELECIONADA_COMPLETA;
        if (pass != null && !"".equals(pass)) {
            cryptoLblSenha.setText(pass);
            mostrandoSenhaAberta = !mostrandoSenhaAberta;
        }
    }//GEN-LAST:event_cryptoBtnMostrarOcultarActionPerformed

    private void cryptoArvoreMaquinasValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_cryptoArvoreMaquinasValueChanged
        if (evt != null && evt.getNewLeadSelectionPath() != null && evt.getNewLeadSelectionPath().getLastPathComponent() != null) {
            final String node = evt.getNewLeadSelectionPath().getLastPathComponent().toString();
            mudarLabels(node);
        }
    }//GEN-LAST:event_cryptoArvoreMaquinasValueChanged

    private void cryptoArvoreMaquinasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cryptoArvoreMaquinasMousePressed
        if (evt.getClickCount() >= 2) {
            try {
                final String maquina = cryptoArvoreMaquinas.getSelectionPath().getPathComponent(2).toString();
                final String nomeMaquina = maquina.contains(">") ? maquina.split(">")[0].trim() : maquina;
                if (VariaveisComuns.MAQUINAS_TODAS.containsKey(nomeMaquina)) {
                    TerminalUtil.executarTerminal(VariaveisComuns.MAQUINAS_TODAS.get(nomeMaquina));
                }
            } catch (Exception ex) {}
        }
    }//GEN-LAST:event_cryptoArvoreMaquinasMousePressed

    private void btnAnoAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnoAnteriorActionPerformed
        anoAnterior();
    }//GEN-LAST:event_btnAnoAnteriorActionPerformed

    private void btnMesAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMesAnteriorActionPerformed
        mesAnterior();
    }//GEN-LAST:event_btnMesAnteriorActionPerformed

    private void btnHojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHojeActionPerformed
        mudarCalendarioHoje();
    }//GEN-LAST:event_btnHojeActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        mudarCalendarioSelecionado();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnAnoProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnoProximoActionPerformed
        anoProximo();
    }//GEN-LAST:event_btnAnoProximoActionPerformed

    private void btnMesProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMesProximoActionPerformed
        mesProximo();
    }//GEN-LAST:event_btnMesProximoActionPerformed

    private void tabCalendarioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabCalendarioStateChanged
        if (tabCalendario != null && tabCalendario.getSelectedIndex() == 5) {
            txtAno.setText("");
            txtMes.setText("");
            mudarCalendarioHoje();
        }
    }//GEN-LAST:event_tabCalendarioStateChanged

    private void copiarCkWebCatalinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarCkWebCatalinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copiarCkWebCatalinaActionPerformed

    private void copiarBtnIniciarCopiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarBtnIniciarCopiaActionPerformed
        int qtDias = 0;
        try {
            qtDias = Integer.parseInt(copiarTxtQtDias.getText());
        } catch (Exception ex) {
            msg("Quantidade de dias invalida", true);
            return;
        }
        
        final File f = new File(copiarLblDestino.getText());
        if (!f.exists() || !f.isDirectory()) {
            msg("Diretorio de destino invalido", true);
            return;
        }
        
        final CopiarEntity entity = new CopiarEntity();
        
        entity.setWebCatalina(copiarCkWebCatalina.isSelected());
        entity.setWebLocalhost(copiarCkWebLocalhost.isSelected());
        entity.setWebLocalhostAccess(copiarCkWebLocalhostAccess.isSelected());
        entity.setWebDoitClient(copiarCkWebDoitClient.isSelected());
        entity.setWebAbertura(copiarCkWebAbertura.isSelected());
        entity.setWebTelematica(copiarCkWebTelematica.isSelected());
        entity.setWebWscetelem(copiarCkWebWscetelem.isSelected());
        entity.setWebWstelem(copiarCkWebWstelem.isSelected());
        entity.setWebSmsCyber(copiarCkWebSmsCyber.isSelected());
        entity.setAutMaster1(copiarCkAutMaster1.isSelected());
        entity.setAutMaster2(copiarCkAutMaster2.isSelected());
        entity.setAutMaster3(copiarCkAutMaster3.isSelected());
        entity.setAutMaster4(copiarCkAutMaster4.isSelected());
        entity.setAutAura(copiarCkAutAura.isSelected());
        entity.setAutTecban(copiarCkAutTecban.isSelected());
        entity.setAutItautec(copiarCkAutItautec.isSelected());

        if (!entity.temAlgumPreenchido()) {
            msg("Selecione o que copiar", true);
            return;
        }
        
        Copiar.copiar(copiarTxtAreaLog, entity, f, qtDias);
    }//GEN-LAST:event_copiarBtnIniciarCopiaActionPerformed

    private void copiarBtnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarBtnProcurarActionPerformed
        copiarLblDestino.setText(AcoesComuns.escolherDiretorio(this));
    }//GEN-LAST:event_copiarBtnProcurarActionPerformed

    
    private void anoProximo() {
        calTmp.add(Calendar.YEAR, 1);
        mudarCalendario(calTmp, null);
    }
    
    private void anoAnterior() {
        calTmp.add(Calendar.YEAR, -1);
        mudarCalendario(calTmp, null);
    }
    
    private void mesProximo() {
        calTmp.add(Calendar.MONTH, 1);
        mudarCalendario(calTmp, null);
    }
    
    private void mesAnterior() {
        calTmp.add(Calendar.MONTH, -1);
        mudarCalendario(calTmp, null);
    }
    
    private void mudarCalendarioSelecionado() {
        try {
            final int ano = Integer.parseInt(txtAno.getText());
            final int mes = Integer.parseInt(txtMes.getText());
            
            if (ano > 1910 && ano < 2099 && mes > 0 && mes < 13) {
                calTmp.set(Calendar.YEAR, ano);
                calTmp.set(Calendar.MONTH, (mes-1));
                calTmp.set(Calendar.DAY_OF_MONTH, 1);
                calTmp.set(Calendar.HOUR_OF_DAY, 1);
                
                mudarCalendario(calTmp, null);
                
            } else {
                msg("Informar ano e mes validos ( Ex: ano=2017 | mes=5 )", false);
            }
        } catch (Exception ex) {
            msg("Informar ano e mes validos ( Ex: ano=2017 | mes=5 )", false);
        }
    }
    
    private void mudarCalendarioHoje() {
        calTmp = Calendar.getInstance(TIMEZONE_GMT3, LOCALE_PtBR);
        calTmp.set(Calendar.HOUR_OF_DAY, 1);
        mudarCalendario(calTmp, calTmp.get(Calendar.DAY_OF_MONTH));
    }
    
    private void mudarCalendario(final Calendar data, final Integer diaAtual) {
        final StringBuilder sb = new StringBuilder();
        sb.append(calTmp.getDisplayName(Calendar.MONTH, Calendar.LONG_FORMAT, LOCALE_PtBR));
        sb.append(" / ");
        sb.append(calTmp.get(Calendar.YEAR));
        lblData.setText(sb.toString());
        
        final Calendar cal = Calendar.getInstance(TIMEZONE_GMT3, LOCALE_PtBR);
        cal.setTime(calTmp.getTime());
        cal.set(Calendar.DAY_OF_MONTH, 1);
        
        final int inicio = cal.get(Calendar.DAY_OF_WEEK);
        final int mesAtual = cal.get(Calendar.MONTH);
        
        for (int i = 0 ; i <= 42 ; i++) {
            if (i < inicio) {
                mudarTxtDia("", "", i, false);
            } else if (cal.get(Calendar.MONTH) == mesAtual) {
                mudarTxtDia(
                        cal.get(Calendar.DAY_OF_MONTH),
                        cal.get(Calendar.DAY_OF_YEAR),
                        i,
                        (diaAtual != null && diaAtual == cal.get(Calendar.DAY_OF_MONTH)));
                
                cal.add(Calendar.DAY_OF_MONTH, 1);
            } else {
                mudarTxtDia("", "", i, false);
            }
        }
    }
    
    
    private void mudarTxtDia(final String strDiaM, final String strDiaJ, final int indice, final boolean isMudarCor) {
        switch (indice) {
            case 1:
                alterar(_d1, _j1, strDiaM, strDiaJ, isMudarCor);
                break;
            case 2:
                alterar(_d2, _j2, strDiaM, strDiaJ, isMudarCor);
                break;
            case 3:
                alterar(_d3, _j3, strDiaM, strDiaJ, isMudarCor);
                break;
            case 4:
                alterar(_d4, _j4, strDiaM, strDiaJ, isMudarCor);
                break;
            case 5:
                alterar(_d5, _j5, strDiaM, strDiaJ, isMudarCor);
                break;
            case 6:
                alterar(_d6, _j6, strDiaM, strDiaJ, isMudarCor);
                break;
            case 7:
                alterar(_d7, _j7, strDiaM, strDiaJ, isMudarCor);
                break;
            case 8:
                alterar(_d8, _j8, strDiaM, strDiaJ, isMudarCor);
                break;
            case 9:
                alterar(_d9, _j9, strDiaM, strDiaJ, isMudarCor);
                break;
            case 10:
                alterar(_d10, _j10, strDiaM, strDiaJ, isMudarCor);
                break;
            case 11:
                alterar(_d11, _j11, strDiaM, strDiaJ, isMudarCor);
                break;
            case 12:
                alterar(_d12, _j12, strDiaM, strDiaJ, isMudarCor);
                break;
            case 13:
                alterar(_d13, _j13, strDiaM, strDiaJ, isMudarCor);
                break;
            case 14:
                alterar(_d14, _j14, strDiaM, strDiaJ, isMudarCor);
                break;
            case 15:
                alterar(_d15, _j15, strDiaM, strDiaJ, isMudarCor);
                break;
            case 16:
                alterar(_d16, _j16, strDiaM, strDiaJ, isMudarCor);
                break;
            case 17:
                alterar(_d17, _j17, strDiaM, strDiaJ, isMudarCor);
                break;
            case 18:
                alterar(_d18, _j18, strDiaM, strDiaJ, isMudarCor);
                break;
            case 19:
                alterar(_d19, _j19, strDiaM, strDiaJ, isMudarCor);
                break;
            case 20:
                alterar(_d20, _j20, strDiaM, strDiaJ, isMudarCor);
                break;
            case 21:
                alterar(_d21, _j21, strDiaM, strDiaJ, isMudarCor);
                break;
            case 22:
                alterar(_d22, _j22, strDiaM, strDiaJ, isMudarCor);
                break;
            case 23:
                alterar(_d23, _j23, strDiaM, strDiaJ, isMudarCor);
                break;
            case 24:
                alterar(_d24, _j24, strDiaM, strDiaJ, isMudarCor);
                break;
            case 25:
                alterar(_d25, _j25, strDiaM, strDiaJ, isMudarCor);
                break;
            case 26:
                alterar(_d26, _j26, strDiaM, strDiaJ, isMudarCor);
                break;
            case 27:
                alterar(_d27, _j27, strDiaM, strDiaJ, isMudarCor);
                break;
            case 28:
                alterar(_d28, _j28, strDiaM, strDiaJ, isMudarCor);
                break;
            case 29:
                alterar(_d29, _j29, strDiaM, strDiaJ, isMudarCor);
                break;
            case 30:
                alterar(_d30, _j30, strDiaM, strDiaJ, isMudarCor);
                break;
            case 31:
                alterar(_d31, _j31, strDiaM, strDiaJ, isMudarCor);
                break;
            case 32:
                alterar(_d32, _j32, strDiaM, strDiaJ, isMudarCor);
                break;
            case 33:
                alterar(_d33, _j33, strDiaM, strDiaJ, isMudarCor);
                break;
            case 34:
                alterar(_d34, _j34, strDiaM, strDiaJ, isMudarCor);
                break;
            case 35:
                alterar(_d35, _j35, strDiaM, strDiaJ, isMudarCor);
                break;
            case 36:
                alterar(_d36, _j36, strDiaM, strDiaJ, isMudarCor);
                break;
            case 37:
                alterar(_d37, _j37, strDiaM, strDiaJ, isMudarCor);
                break;
            case 38:
                alterar(_d38, _j38, strDiaM, strDiaJ, isMudarCor);
                break;
            case 39:
                alterar(_d39, _j39, strDiaM, strDiaJ, isMudarCor);
                break;
            case 40:
                alterar(_d40, _j40, strDiaM, strDiaJ, isMudarCor);
                break;
            case 41:
                alterar(_d41, _j41, strDiaM, strDiaJ, isMudarCor);
                break;
            case 42:
                alterar(_d42, _j42, strDiaM, strDiaJ, isMudarCor);
                break;
            default:
                break;
        }
    }
    
    private void alterar(final JLabel lblD, final JLabel lblJ, final String strD, final String strJ, final boolean isColorir) {
        lblD.setText(strD);
        lblJ.setText(strJ);
        if (isColorir) {
            lblD.setForeground(Color.red);
            lblJ.setForeground(Color.red);
        } else {
            lblD.setForeground(Color.BLACK);
            lblJ.setForeground(new java.awt.Color(102, 102, 102));
        }
    }
    
    private void mudarTxtDia(final int diaM, final int diaJ, final int indice, final boolean isMudarCor) {
        final String strDiaM = diaM < 10 ? ("0" + diaM) : ("" + diaM);
        final String strDiaJ = diaJ < 10 ? ("00" + diaJ) : (diaJ < 100 ? ("0" + diaJ) : ("" + diaJ));
        mudarTxtDia(strDiaM, strDiaJ, indice, isMudarCor);
    }
    
    
    private void msg(final String msg, final boolean isErro) {
        if (isErro) {
            JOptionPane.showMessageDialog(getContentPane(), msg, "ERRO", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(getContentPane(), msg, "Atencao", JOptionPane.WARNING_MESSAGE);
        }
        
    }
    
    private boolean validarEnvioComando() {
        // Validar servidor
        final String comando = directTxtAreaRequest.getText();
        
        if (AcoesComuns.isVazio(directTxtHost.getText()) || AcoesComuns.isVazio(directTxtPorta.getText())) {
            mensagemErro("Informar IP/Host e Porta do servidor que recebera as mensagens");
            return false;
        }
        // Validar String
        if (AcoesComuns.isVazio(comando)) {
            mensagemErro("Informar o comando/mensagem que sera enviado");
            return false;
        }
        // Se estiver tudo certo, validar o destino do comando
        boolean hsmCorreto = true;
        if (comando.contains(Constantes.SEPARADOR_SERVER) && directCheckDevice.isSelected()) {
            hsmCorreto = mensagemPergunta("Tem certeza que esse comando deve ser enviado para o HARDWARE HSM-DEVICE? Existem separadores no comando...");
        }
        if (!comando.contains(Constantes.SEPARADOR_SERVER) && !directCheckDevice.isSelected()) {
            hsmCorreto = mensagemPergunta("Tem certeza que esse comando deve ser enviado para o HsmServer? Nao existem separadores no comando...");
        }
        if (!hsmCorreto) return false;
        
        // Se o destino esta correto, verificar se eh uma mensagem critica
        if (comando.startsWith("01") 
                || comando.startsWith("A0") 
                || comando.startsWith("A6")) {
            return mensagemPergunta("O comando que esta tentando envia eh critico, tem certeza que deseja enviar? Confira o comando, IP e Porta do servidor.");
        }
        return true;
    }
    
    private void validarTratarEnviarComando() {
        // Valida se os dados de entrada estao corretos
        if (validarEnvioComando()) {
            // Adiciona o comando atual na lista de historico
            tratarHistorico();
            // Tratamento para comando formatado na tela
            String comando = directTxtAreaRequest.getText();
            if (comando.indexOf('\n') >= 0 && comando.indexOf(";\n") <= 0) {
                comando = comando.replaceAll(Constantes.QUEBRA_LINHA, directCheckDevice.isSelected() ? Constantes.SEPARADOR_DEVICE : Constantes.SEPARADOR_SERVER);
            }
            // Tratamento para mais de um comando sendo enviado de uma vez
            if (!directCheckDevice.isSelected() && comando.indexOf(";") > 0) {
                directTxtAreaResponse.setText("");
                String[] comandos = comando.split(";\n");
                for (String msg : comandos) {
                    String retorno = HSM.enviarComando(msg, directTxtHost.getText(), directTxtPorta.getText(), false);
                    directTxtAreaResponse.setText(directTxtAreaResponse.getText() + "\n" + retorno);
                }
            } 
            // Apenas um comando
            else {
                directTxtAreaResponse.setText(HSM.enviarComando(
                        comando, 
                        directTxtHost.getText(), 
                        directTxtPorta.getText(), 
                        directCheckDevice.isSelected()));
            }
        }
    }
    
    @SuppressWarnings({"unchecked", "rawtypes"})
    private void tratarHistorico() {
        Collections.reverse(VariaveisComuns.HISTORICO_DIRECT);
        try {
            // So adiciona se nao for igual ao ultimo
            if (!((String) VariaveisComuns.HISTORICO_DIRECT.get(VariaveisComuns.HISTORICO_DIRECT.size() - 1)).equals(directTxtAreaRequest.getText())) {
                VariaveisComuns.HISTORICO_DIRECT.add(directTxtAreaRequest.getText());
            }
        } catch (Exception ex) {
            VariaveisComuns.HISTORICO_DIRECT.add(directTxtAreaRequest.getText());
        }

        Collections.reverse(VariaveisComuns.HISTORICO_DIRECT);
        directComboHistorico.setModel(new DefaultComboBoxModel(VariaveisComuns.HISTORICO_DIRECT.toArray()));
    }
    
    private void gerarCVCs(final String cartao, final String data, final String bandeira) {
        try {
            
            final String _601 = HSM.enviarMensagemHsmServer(VariaveisComuns.HSM_CVC_IP, Integer.parseInt(VariaveisComuns.HSM_CVC_PORTA), "CW&" + bandeira + "&" + cartao + "&" + data + "&" + "601");
            final String _501 = HSM.enviarMensagemHsmServer(VariaveisComuns.HSM_CVC_IP, Integer.parseInt(VariaveisComuns.HSM_CVC_PORTA), "CW&" + bandeira + "&" + cartao + "&" + data + "&" + "501");
            final String _000 = HSM.enviarMensagemHsmServer(VariaveisComuns.HSM_CVC_IP, Integer.parseInt(VariaveisComuns.HSM_CVC_PORTA), "CW&" + bandeira + "&" + cartao + "&" + data + "&" + "000");
            final String _999 = HSM.enviarMensagemHsmServer(VariaveisComuns.HSM_CVC_IP, Integer.parseInt(VariaveisComuns.HSM_CVC_PORTA), "CW&" + bandeira + "&" + cartao + "&" + data + "&" + "999");
            
            if (!AcoesComuns.isVazio(_601) && _601.length() > 4) {
                cvcLblResult601.setText(_601.substring(4));
            } else {
                cvcLblResult601.setText(_601);
            }
            
            if (!AcoesComuns.isVazio(_501) && _501.length() > 4) {
                cvcLblResult501.setText(_501.substring(4));
            } else {
                cvcLblResult501.setText(_501);
            }
            
            if (!AcoesComuns.isVazio(_000) && _000.length() > 4) {
                cvcLblResult000.setText(_000.substring(4));
            } else {
                cvcLblResult000.setText(_000);
            }
            
            if (!AcoesComuns.isVazio(_999) && _999.length() > 4) {
                cvcLblResult999.setText(_999.substring(4));
            } else {
                cvcLblResult999.setText(_999);
            }
            
        } catch (Exception ex) {
            mensagemErro("Erro ao tentar enviar gerar os CVCs " + ex.getMessage());
        }
    }
    
    
    private boolean validarParametros() {
        if (AcoesComuns.isVazio(cvcTxtNumeroCartao.getText())) {
            mensagemErro("Preencha o numero do cartao");
            return false;
        }
        if (AcoesComuns.isVazio(cvcTxtDataValidade.getText())) {
            mensagemErro("Preencha a data de validade do cartao");
            return false;
        }
        try {
            final SimpleDateFormat sdf = new SimpleDateFormat("yyMM");
            sdf.parse(cvcTxtDataValidade.getText());
        } catch (Exception ex) {
            mensagemErro("A data de validade informada nao eh valida ou nao corresponde ao formato selecionado");
            return false;
        }
        return true;
    }
    
    private void mensagemErro(final String texto) {
        JOptionPane.showMessageDialog(getContentPane(), texto, "Erro", JOptionPane.ERROR_MESSAGE);
    }

    private void mensagemAviso(final String texto) {
        JOptionPane.showMessageDialog(getContentPane(), texto, "Atencao", JOptionPane.WARNING_MESSAGE);
    }

    private void mensagemInformacao(final String texto) {
        JOptionPane.showMessageDialog(getContentPane(), texto, "Atencao", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private boolean mensagemPergunta(final String msgPergunta) {
        return JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(getContentPane(), msgPergunta, "?", JOptionPane.YES_NO_OPTION);
    }

    private String converter(final int origem, final int destino, final String texto) {
        return ConversorStrRplc.converter(origem, destino, texto);
    }

    private void initCpfComponents() {
        final Calendar cal = Calendar.getInstance();
        final int dia = cal.get(Calendar.DAY_OF_MONTH);
        final int mes = cal.get(Calendar.MONTH) + 1;
        String txt = (cal.get(Calendar.YEAR) + "").substring(2);
        txt += (mes + "");
        txt += (dia + "");
        cpfTxtPrefixo.setText(txt);
        cpfTxtPrefixo.setEnabled(false);
        cpfRadioPrefixoAleatorio.setSelected(true);
        cpfRadioQuantidadeUm.setSelected(true);

    }

    private boolean validar() {
        final boolean aleatorio = cpfRadioPrefixoAleatorio.isSelected();
        final String prefix = cpfTxtPrefixo.getText();

        if (!aleatorio) {
            if (prefix == null || "".equals(prefix) || "".equals(prefix.trim())) {
                mensagemErro("Prefixo invalido, apenas numeros, ate 9 caracteres");
                return false;
            } else {
                if (prefix.length() > 9) {
                    mensagemErro("Prefixo invalido, apenas numeros, ate 9 caracteres");
                    return false;
                } else {
                    try {
                        Long.parseLong(prefix);
                    } catch (Exception ex) {
                        mensagemErro("Prefixo invalido, apenas numeros, ate 9 caracteres");
                        return false;
                    }
                }
            }
        }
        return true;
    }

    private void criar() {
        final boolean apenasUm = cpfRadioQuantidadeUm.isSelected();
        final boolean aleatorio = cpfRadioPrefixoAleatorio.isSelected();
        final String prefix = cpfTxtPrefixo.getText();
        final int quantidade = cpfSliderMuitos.getValue();

        cpfTxtAreaResultado.setText("");

        if (aleatorio && apenasUm) {
            final String data = GeradorCpfCnpj.getDataParaCPF();
            cpfTxtAreaResultado.setText(GeradorCpfCnpj.gerarCpf(GeradorCpfCnpj.getNumerosBase(data)));
            AcoesComuns.copiarParaAreaTransferencia(cpfTxtAreaResultado.getText());
        } else if (aleatorio && !apenasUm) {
            final String data = GeradorCpfCnpj.getDataParaCPF();
            for (int i = 0; i < quantidade; i++) {
                cpfTxtAreaResultado.append(GeradorCpfCnpj.gerarCpf(GeradorCpfCnpj.getNumerosBase(data)));
                cpfTxtAreaResultado.append("\n");
            }
        } else if (!aleatorio && apenasUm) {
            cpfTxtAreaResultado.setText(GeradorCpfCnpj.gerarCpf(GeradorCpfCnpj.getNumerosBase(prefix)));
            AcoesComuns.copiarParaAreaTransferencia(cpfTxtAreaResultado.getText());
        } else if (!aleatorio && !apenasUm) {
            for (int i = 0; i < quantidade; i++) {
                cpfTxtAreaResultado.append(GeradorCpfCnpj.gerarCpf(GeradorCpfCnpj.getNumerosBase(prefix)));
                cpfTxtAreaResultado.append("\n");
            }
        }

    }

    public void mudarLabels(final String param) {
        final String nomeMaquina = param.contains(">") ? param.split(">")[0].trim() : param;
        if (VariaveisComuns.MAQUINAS_TODAS.containsKey(nomeMaquina)) {
            try {
                mostrandoSenhaAberta = false;
                
                final MaquinaEntity me = VariaveisComuns.MAQUINAS_TODAS.get(nomeMaquina);
                cryptoLblUsuario.setText(me.getUsuario());
                cryptoLblSenha.setText(me.getSenhaReduzida());

                VariaveisComuns.NOME_MAQUINA_SELECIONADA = me.getNome();
                VariaveisComuns.SENHA_SELECIONADA_ABREVIADA = me.getSenhaReduzida();
                VariaveisComuns.SENHA_SELECIONADA_COMPLETA = me.getSenhaAberta();
            } catch (Exception ex) {
                mensagemAviso("Erro [" + ex.getMessage() + "] ao buscar a senha para a maquina selecionada");
            }
        }
    }

    public void recarregarArvore() {
        final String[] grupos = VariaveisComuns.MAQUINAS.keySet().toArray(new String[0]);
        final DefaultMutableTreeNode paiDeTodos = new DefaultMutableTreeNode();
        for (String grupo : grupos) {
            final DefaultMutableTreeNode dmtn = new DefaultMutableTreeNode(grupo);
            final List<MaquinaEntity> maquinas = VariaveisComuns.MAQUINAS.get(grupo);
            for (MaquinaEntity maquina : maquinas) {
                final DefaultMutableTreeNode m = new DefaultMutableTreeNode(maquina.getNomeExibicao());
                dmtn.add(m);
            }
            paiDeTodos.add(dmtn);
        }

        final DefaultTreeModel model = new DefaultTreeModel(paiDeTodos);
        model.reload();
        cryptoArvoreMaquinas.setModel(model);
        cryptoArvoreMaquinas.repaint();
        ((DefaultTreeModel) cryptoArvoreMaquinas.getModel()).reload();
        cryptoArvoreMaquinas.updateUI();
        cryptoScrollMaquinas.repaint();
        repaint();
        getContentPane().repaint();
        cryptoScrollMaquinas.updateUI();

    }
    
    public static DefaultComboBoxModel getModelExemplos() {
        final List<String> lista = new ArrayList<>(VariaveisComuns.EXEMPLOS_DIRECT.keySet());
        Collections.sort(lista, (String o1, String o2) -> {
            try {
                final String t1 = o1.substring(o1.indexOf("[")+1, o1.indexOf("]"));
                final String t2 = o2.substring(o2.indexOf("[")+1, o2.indexOf("]"));
                return t1.compareTo(t2);
            } catch (Exception ex) {
                return 0;
            }
        });
        return new DefaultComboBoxModel(lista.toArray());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel _d1;
    public javax.swing.JLabel _d10;
    public javax.swing.JLabel _d11;
    public javax.swing.JLabel _d12;
    public javax.swing.JLabel _d13;
    public javax.swing.JLabel _d14;
    public javax.swing.JLabel _d15;
    public javax.swing.JLabel _d16;
    public javax.swing.JLabel _d17;
    public javax.swing.JLabel _d18;
    public javax.swing.JLabel _d19;
    public javax.swing.JLabel _d2;
    public javax.swing.JLabel _d20;
    public javax.swing.JLabel _d21;
    public javax.swing.JLabel _d22;
    public javax.swing.JLabel _d23;
    public javax.swing.JLabel _d24;
    public javax.swing.JLabel _d25;
    public javax.swing.JLabel _d26;
    public javax.swing.JLabel _d27;
    public javax.swing.JLabel _d28;
    public javax.swing.JLabel _d29;
    public javax.swing.JLabel _d3;
    public javax.swing.JLabel _d30;
    public javax.swing.JLabel _d31;
    public javax.swing.JLabel _d32;
    public javax.swing.JLabel _d33;
    public javax.swing.JLabel _d34;
    public javax.swing.JLabel _d35;
    public javax.swing.JLabel _d36;
    public javax.swing.JLabel _d37;
    public javax.swing.JLabel _d38;
    public javax.swing.JLabel _d39;
    public javax.swing.JLabel _d4;
    public javax.swing.JLabel _d40;
    public javax.swing.JLabel _d41;
    public javax.swing.JLabel _d42;
    public javax.swing.JLabel _d5;
    public javax.swing.JLabel _d6;
    public javax.swing.JLabel _d7;
    public javax.swing.JLabel _d8;
    public javax.swing.JLabel _d9;
    public javax.swing.JLabel _j1;
    public javax.swing.JLabel _j10;
    public javax.swing.JLabel _j11;
    public javax.swing.JLabel _j12;
    public javax.swing.JLabel _j13;
    public javax.swing.JLabel _j14;
    public javax.swing.JLabel _j15;
    public javax.swing.JLabel _j16;
    public javax.swing.JLabel _j17;
    public javax.swing.JLabel _j18;
    public javax.swing.JLabel _j19;
    public javax.swing.JLabel _j2;
    public javax.swing.JLabel _j20;
    public javax.swing.JLabel _j21;
    public javax.swing.JLabel _j22;
    public javax.swing.JLabel _j23;
    public javax.swing.JLabel _j24;
    public javax.swing.JLabel _j25;
    public javax.swing.JLabel _j26;
    public javax.swing.JLabel _j27;
    public javax.swing.JLabel _j28;
    public javax.swing.JLabel _j29;
    public javax.swing.JLabel _j3;
    public javax.swing.JLabel _j30;
    public javax.swing.JLabel _j31;
    public javax.swing.JLabel _j32;
    public javax.swing.JLabel _j33;
    public javax.swing.JLabel _j34;
    public javax.swing.JLabel _j35;
    public javax.swing.JLabel _j36;
    public javax.swing.JLabel _j37;
    public javax.swing.JLabel _j38;
    public javax.swing.JLabel _j39;
    public javax.swing.JLabel _j4;
    public javax.swing.JLabel _j40;
    public javax.swing.JLabel _j41;
    public javax.swing.JLabel _j42;
    public javax.swing.JLabel _j5;
    public javax.swing.JLabel _j6;
    public javax.swing.JLabel _j7;
    public javax.swing.JLabel _j8;
    public javax.swing.JLabel _j9;
    public javax.swing.JButton btnAnoAnterior;
    public javax.swing.JButton btnAnoProximo;
    public javax.swing.JButton btnHoje;
    public javax.swing.JButton btnMesAnterior;
    public javax.swing.JButton btnMesProximo;
    public javax.swing.JButton btnOk;
    public javax.swing.JButton copiarBtnIniciarCopia;
    public javax.swing.JButton copiarBtnProcurar;
    public javax.swing.JCheckBox copiarCkAutAura;
    public javax.swing.JCheckBox copiarCkAutItautec;
    public javax.swing.JCheckBox copiarCkAutMaster1;
    public javax.swing.JCheckBox copiarCkAutMaster2;
    public javax.swing.JCheckBox copiarCkAutMaster3;
    public javax.swing.JCheckBox copiarCkAutMaster4;
    public javax.swing.JCheckBox copiarCkAutTecban;
    public javax.swing.JCheckBox copiarCkWebAbertura;
    public javax.swing.JCheckBox copiarCkWebCatalina;
    public javax.swing.JCheckBox copiarCkWebDoitClient;
    public javax.swing.JCheckBox copiarCkWebLocalhost;
    public javax.swing.JCheckBox copiarCkWebLocalhostAccess;
    public javax.swing.JCheckBox copiarCkWebSmsCyber;
    public javax.swing.JCheckBox copiarCkWebTelematica;
    public javax.swing.JCheckBox copiarCkWebWscetelem;
    public javax.swing.JCheckBox copiarCkWebWstelem;
    public javax.swing.JLabel copiarLblDestino;
    public javax.swing.JScrollPane copiarScrollLog;
    public javax.swing.JTextArea copiarTxtAreaLog;
    public javax.swing.JTextField copiarTxtQtDias;
    public javax.swing.JButton cpfBtnCriar;
    public javax.swing.JLabel cpfLblQuantidade;
    public javax.swing.ButtonGroup cpfRadioGroupPrefixo;
    public javax.swing.ButtonGroup cpfRadioGroupQuantidade;
    public javax.swing.JRadioButton cpfRadioPrefixoAleatorio;
    public javax.swing.JRadioButton cpfRadioPrefixoInformado;
    public javax.swing.JRadioButton cpfRadioQuantidadeMuitos;
    public javax.swing.JRadioButton cpfRadioQuantidadeUm;
    public javax.swing.JScrollPane cpfScrollResultado;
    public javax.swing.JSlider cpfSliderMuitos;
    public javax.swing.JTextArea cpfTxtAreaResultado;
    public javax.swing.JTextField cpfTxtPrefixo;
    public javax.swing.JTree cryptoArvoreMaquinas;
    public javax.swing.JButton cryptoBtnAbrirMuitos;
    public javax.swing.JButton cryptoBtnAbrirTerminal;
    public javax.swing.JButton cryptoBtnAlterarSenha;
    public javax.swing.JButton cryptoBtnBloquearTela;
    public javax.swing.JButton cryptoBtnCopiar;
    public javax.swing.JButton cryptoBtnDetalhes;
    public javax.swing.JButton cryptoBtnEdicaoAvancada;
    public javax.swing.JButton cryptoBtnMostrarOcultar;
    public javax.swing.JButton cryptoBtnNovaMaquina;
    public javax.swing.JLabel cryptoLblSenha;
    public javax.swing.JLabel cryptoLblUsuario;
    public javax.swing.JScrollPane cryptoScrollMaquinas;
    public javax.swing.JRadioButton cvcBandeiraAU;
    public javax.swing.JRadioButton cvcBandeiraMC;
    public javax.swing.JRadioButton cvcBandeiraTB;
    public javax.swing.JRadioButton cvcBandeiraVS;
    public javax.swing.JButton cvcBtnGerar;
    public javax.swing.JLabel cvcLblResult000;
    public javax.swing.JLabel cvcLblResult501;
    public javax.swing.JLabel cvcLblResult601;
    public javax.swing.JLabel cvcLblResult999;
    public javax.swing.ButtonGroup cvcRadioGroupBandeira;
    public javax.swing.JTextField cvcTxtDataValidade;
    public javax.swing.JTextField cvcTxtNumeroCartao;
    public javax.swing.JButton directBtnRequestDe55;
    public javax.swing.JButton directBtnRequestEnviar;
    public javax.swing.JButton directBtnRequestLimpar;
    public javax.swing.JButton directBtnRequestSalvar;
    public javax.swing.JButton directBtnRequestToBin;
    public javax.swing.JButton directBtnRequestToStr;
    public javax.swing.JButton directBtnResponseLimpar;
    public javax.swing.JButton directBtnResponseToBin;
    public javax.swing.JButton directBtnResponseToStr;
    public javax.swing.JCheckBox directCheckDevice;
    public javax.swing.JComboBox directComboExemplos;
    public javax.swing.JComboBox directComboHistorico;
    public javax.swing.JScrollPane directScrollRequest;
    public javax.swing.JScrollPane directScrollResponse;
    public javax.swing.JTextArea directTxtAreaRequest;
    public javax.swing.JTextArea directTxtAreaResponse;
    public javax.swing.JTextField directTxtHost;
    public javax.swing.JTextField directTxtPorta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAno;
    public javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDom;
    private javax.swing.JLabel lblMes;
    private javax.swing.JLabel lblQua;
    private javax.swing.JLabel lblQui;
    public javax.swing.JLabel lblSab;
    private javax.swing.JLabel lblSeg;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblTer;
    private javax.swing.JPanel panelCalendario;
    public javax.swing.JPanel panelCopiar;
    public javax.swing.JComboBox strRplcOrigem;
    public javax.swing.JButton strRplcOrigemBtnConverter;
    public javax.swing.JComboBox strRplcOrigemDestino;
    public javax.swing.JTextArea strRplcOrigemTxtArea;
    public javax.swing.JTabbedPane tabCalendario;
    public javax.swing.JTextField txtAno;
    public javax.swing.JTextField txtMes;
    // End of variables declaration//GEN-END:variables
}
